[
  {
    "code": "/*\n\nThis is an implementation of the AES algorithm, specifically ECB, CTR and CBC mode.\nBlock size can be chosen in aes.h - available choices are AES128, AES192, AES256.\n\nThe implementation is verified against the test vectors in:\n  National Institute of Standards and Technology Special Publication 800-38A 2001 ED\n\nECB-AES128\n----------\n\n  plain-text:\n    6bc1bee22e409f96e93d7e117393172a\n    ae2d8a571e03ac9c9eb76fac45af8e51\n    30c81c46a35ce411e5fbc1191a0a52ef\n    f69f2445df4f9b17ad2b417be66c3710\n\n  key:\n    2b7e151628aed2a6abf7158809cf4f3c\n\n  resulting cipher\n    3ad77bb40d7a3660a89ecaf32466ef97 \n    f5d3d58503b9699de785895a96fdbaaf \n    43b1cd7f598ece23881b00e3ed030688 \n    7b0c785e27e8ad3f8223207104725dd4 \n\n\nNOTE:   String length must be evenly divisible by 16byte (str_len % 16 == 0)\n        You should pad the end of the string with zeros if this is not the case.\n        For AES192/256 the key size is proportionally larger.\n\n*/\n\n\n/*****************************************************************************/\n/* Includes:                                                                 */\n/*****************************************************************************/\n#include <string.h> // CBC mode, for memset\n#include \"aes.h\"\n\n/*****************************************************************************/\n/* Defines:                                                                  */\n/*****************************************************************************/\n// The number of columns comprising a state in AES. This is a constant in AES. Value=4\n#define Nb 4\n\n#if defined(AES256) && (AES256 == 1)\n    #define Nk 8\n    #define Nr 14\n#elif defined(AES192) && (AES192 == 1)\n    #define Nk 6\n    #define Nr 12\n#else\n    #define Nk 4        // The number of 32 bit words in a key.\n    #define Nr 10       // The number of rounds in AES Cipher.\n#endif\n\n// jcallan@github points out that declaring Multiply as a function \n// reduces code size considerably with the Keil ARM compiler.\n// See this link for more information: https://github.com/kokke/tiny-AES-C/pull/3\n#ifndef MULTIPLY_AS_A_FUNCTION\n  #define MULTIPLY_AS_A_FUNCTION 0\n#endif\n\n\n\n\n/*****************************************************************************/\n/* Private variables:                                                        */\n/*****************************************************************************/\n// state - array holding the intermediate results during decryption.\ntypedef uint8_t state_t[4][4];\n\n\n\n// The lookup-tables are marked const so they can be placed in read-only storage instead of RAM\n// The numbers below can be computed dynamically trading ROM for RAM - \n// This can be useful in (embedded) bootloader applications, where ROM is often limited.\nstatic const uint8_t sbox[256] = {\n  //0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F\n  0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,\n  0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,\n  0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n  0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,\n  0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,\n  0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n  0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,\n  0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,\n  0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n  0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,\n  0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,\n  0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n  0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\n  0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,\n  0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n  0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 };\n\n#if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)\nstatic const uint8_t rsbox[256] = {\n  0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,\n  0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,\n  0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n  0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,\n  0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,\n  0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n  0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,\n  0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,\n  0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n  0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,\n  0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,\n  0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n  0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,\n  0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,\n  0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n  0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d };\n#endif\n\n// The round constant word array, Rcon[i], contains the values given by \n// x to the power (i-1) being powers of x (x is denoted as {02}) in the field GF(2^8)\nstatic const uint8_t Rcon[11] = {\n  0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36 };\n\n/*\n * Jordan Goulder points out in PR #12 (https://github.com/kokke/tiny-AES-C/pull/12),\n * that you can remove most of the elements in the Rcon array, because they are unused.\n *\n * From Wikipedia's article on the Rijndael key schedule @ https://en.wikipedia.org/wiki/Rijndael_key_schedule#Rcon\n * \n * \"Only the first some of these constants are actually used â€“ up to rcon[10] for AES-128 (as 11 round keys are needed), \n *  up to rcon[8] for AES-192, up to rcon[7] for AES-256. rcon[0] is not used in AES algorithm.\"\n */\n\n\n/*****************************************************************************/\n/* Private functions:                                                        */\n/*****************************************************************************/\n/*\nstatic uint8_t getSBoxValue(uint8_t num)\n{\n  return sbox[num];\n}\n*/\n#define getSBoxValue(num) (sbox[(num)])\n\n// This function produces Nb(Nr+1) round keys. The round keys are used in each round to decrypt the states. \nstatic void KeyExpansion(uint8_t* RoundKey, const uint8_t* Key)\n{\n  unsigned i, j, k;\n  uint8_t tempa[4]; // Used for the column/row operations\n  \n  // The first round key is the key itself.\n  for (i = 0; i < Nk; ++i)\n  {\n    RoundKey[(i * 4) + 0] = Key[(i * 4) + 0];\n    RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];\n    RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];\n    RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];\n  }\n\n  // All other round keys are found from the previous round keys.\n  for (i = Nk; i < Nb * (Nr + 1); ++i)\n  {\n    {\n      k = (i - 1) * 4;\n      tempa[0]=RoundKey[k + 0];\n      tempa[1]=RoundKey[k + 1];\n      tempa[2]=RoundKey[k + 2];\n      tempa[3]=RoundKey[k + 3];\n\n    }\n\n    if (i % Nk == 0)\n    {\n      // This function shifts the 4 bytes in a word to the left once.\n      // [a0,a1,a2,a3] becomes [a1,a2,a3,a0]\n\n      // Function RotWord()\n      {\n        const uint8_t u8tmp = tempa[0];\n        tempa[0] = tempa[1];\n        tempa[1] = tempa[2];\n        tempa[2] = tempa[3];\n        tempa[3] = u8tmp;\n      }\n\n      // SubWord() is a function that takes a four-byte input word and \n      // applies the S-box to each of the four bytes to produce an output word.\n\n      // Function Subword()\n      {\n        tempa[0] = getSBoxValue(tempa[0]);\n        tempa[1] = getSBoxValue(tempa[1]);\n        tempa[2] = getSBoxValue(tempa[2]);\n        tempa[3] = getSBoxValue(tempa[3]);\n      }\n\n      tempa[0] = tempa[0] ^ Rcon[i/Nk];\n    }\n#if defined(AES256) && (AES256 == 1)\n    if (i % Nk == 4)\n    {\n      // Function Subword()\n      {\n        tempa[0] = getSBoxValue(tempa[0]);\n        tempa[1] = getSBoxValue(tempa[1]);\n        tempa[2] = getSBoxValue(tempa[2]);\n        tempa[3] = getSBoxValue(tempa[3]);\n      }\n    }\n#endif\n    j = i * 4; k=(i - Nk) * 4;\n    RoundKey[j + 0] = RoundKey[k + 0] ^ tempa[0];\n    RoundKey[j + 1] = RoundKey[k + 1] ^ tempa[1];\n    RoundKey[j + 2] = RoundKey[k + 2] ^ tempa[2];\n    RoundKey[j + 3] = RoundKey[k + 3] ^ tempa[3];\n  }\n}\n\nvoid AES_init_ctx(struct AES_ctx* ctx, const uint8_t* key)\n{\n  KeyExpansion(ctx->RoundKey, key);\n}\n#if (defined(CBC) && (CBC == 1)) || (defined(CTR) && (CTR == 1))\nvoid AES_init_ctx_iv(struct AES_ctx* ctx, const uint8_t* key, const uint8_t* iv)\n{\n  KeyExpansion(ctx->RoundKey, key);\n  memcpy (ctx->Iv, iv, AES_BLOCKLEN);\n}\nvoid AES_ctx_set_iv(struct AES_ctx* ctx, const uint8_t* iv)\n{\n  memcpy (ctx->Iv, iv, AES_BLOCKLEN);\n}\n#endif\n\n// This function adds the round key to state.\n// The round key is added to the state by an XOR function.\nstatic void AddRoundKey(uint8_t round, state_t* state, const uint8_t* RoundKey)\n{\n  uint8_t i,j;\n  for (i = 0; i < 4; ++i)\n  {\n    for (j = 0; j < 4; ++j)\n    {\n      (*state)[i][j] ^= RoundKey[(round * Nb * 4) + (i * Nb) + j];\n    }\n  }\n}\n\n// The SubBytes Function Substitutes the values in the\n// state matrix with values in an S-box.\nstatic void SubBytes(state_t* state)\n{\n  uint8_t i, j;\n  for (i = 0; i < 4; ++i)\n  {\n    for (j = 0; j < 4; ++j)\n    {\n      (*state)[j][i] = getSBoxValue((*state)[j][i]);\n    }\n  }\n}\n\n// The ShiftRows() function shifts the rows in the state to the left.\n// Each row is shifted with different offset.\n// Offset = Row number. So the first row is not shifted.\nstatic void ShiftRows(state_t* state)\n{\n  uint8_t temp;\n\n  // Rotate first row 1 columns to left  \n  temp           = (*state)[0][1];\n  (*state)[0][1] = (*state)[1][1];\n  (*state)[1][1] = (*state)[2][1];\n  (*state)[2][1] = (*state)[3][1];\n  (*state)[3][1] = temp;\n\n  // Rotate second row 2 columns to left  \n  temp           = (*state)[0][2];\n  (*state)[0][2] = (*state)[2][2];\n  (*state)[2][2] = temp;\n\n  temp           = (*state)[1][2];\n  (*state)[1][2] = (*state)[3][2];\n  (*state)[3][2] = temp;\n\n  // Rotate third row 3 columns to left\n  temp           = (*state)[0][3];\n  (*state)[0][3] = (*state)[3][3];\n  (*state)[3][3] = (*state)[2][3];\n  (*state)[2][3] = (*state)[1][3];\n  (*state)[1][3] = temp;\n}\n\nstatic uint8_t xtime(uint8_t x)\n{\n  return ((x<<1) ^ (((x>>7) & 1) * 0x1b));\n}\n\n// MixColumns function mixes the columns of the state matrix\nstatic void MixColumns(state_t* state)\n{\n  uint8_t i;\n  uint8_t Tmp, Tm, t;\n  for (i = 0; i < 4; ++i)\n  {  \n    t   = (*state)[i][0];\n    Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;\n    Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;\n    Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;\n    Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;\n    Tm  = (*state)[i][3] ^ t ;              Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;\n  }\n}\n\n// Multiply is used to multiply numbers in the field GF(2^8)\n// Note: The last call to xtime() is unneeded, but often ends up generating a smaller binary\n//       The compiler seems to be able to vectorize the operation better this way.\n//       See https://github.com/kokke/tiny-AES-c/pull/34\n#if MULTIPLY_AS_A_FUNCTION\nstatic uint8_t Multiply(uint8_t x, uint8_t y)\n{\n  return (((y & 1) * x) ^\n       ((y>>1 & 1) * xtime(x)) ^\n       ((y>>2 & 1) * xtime(xtime(x))) ^\n       ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^\n       ((y>>4 & 1) * xtime(xtime(xtime(xtime(x)))))); /* this last call to xtime() can be omitted */\n  }\n#else\n#define Multiply(x, y)                                \\\n      (  ((y & 1) * x) ^                              \\\n      ((y>>1 & 1) * xtime(x)) ^                       \\\n      ((y>>2 & 1) * xtime(xtime(x))) ^                \\\n      ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^         \\\n      ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))))   \\\n\n#endif\n\n#if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)\n/*\nstatic uint8_t getSBoxInvert(uint8_t num)\n{\n  return rsbox[num];\n}\n*/\n#define getSBoxInvert(num) (rsbox[(num)])\n\n// MixColumns function mixes the columns of the state matrix.\n// The method used to multiply may be difficult to understand for the inexperienced.\n// Please use the references to gain more information.\nstatic void InvMixColumns(state_t* state)\n{\n  int i;\n  uint8_t a, b, c, d;\n  for (i = 0; i < 4; ++i)\n  { \n    a = (*state)[i][0];\n    b = (*state)[i][1];\n    c = (*state)[i][2];\n    d = (*state)[i][3];\n\n    (*state)[i][0] = Multiply(a, 0x0e) ^ Multiply(b, 0x0b) ^ Multiply(c, 0x0d) ^ Multiply(d, 0x09);\n    (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);\n    (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);\n    (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);\n  }\n}\n\n\n// The SubBytes Function Substitutes the values in the\n// state matrix with values in an S-box.\nstatic void InvSubBytes(state_t* state)\n{\n  uint8_t i, j;\n  for (i = 0; i < 4; ++i)\n  {\n    for (j = 0; j < 4; ++j)\n    {\n      (*state)[j][i] = getSBoxInvert((*state)[j][i]);\n    }\n  }\n}\n\nstatic void InvShiftRows(state_t* state)\n{\n  uint8_t temp;\n\n  // Rotate first row 1 columns to right  \n  temp = (*state)[3][1];\n  (*state)[3][1] = (*state)[2][1];\n  (*state)[2][1] = (*state)[1][1];\n  (*state)[1][1] = (*state)[0][1];\n  (*state)[0][1] = temp;\n\n  // Rotate second row 2 columns to right \n  temp = (*state)[0][2];\n  (*state)[0][2] = (*state)[2][2];\n  (*state)[2][2] = temp;\n\n  temp = (*state)[1][2];\n  (*state)[1][2] = (*state)[3][2];\n  (*state)[3][2] = temp;\n\n  // Rotate third row 3 columns to right\n  temp = (*state)[0][3];\n  (*state)[0][3] = (*state)[1][3];\n  (*state)[1][3] = (*state)[2][3];\n  (*state)[2][3] = (*state)[3][3];\n  (*state)[3][3] = temp;\n}\n#endif // #if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)\n\n// Cipher is the main function that encrypts the PlainText.\nstatic void Cipher(state_t* state, const uint8_t* RoundKey)\n{\n  uint8_t round = 0;\n\n  // Add the First round key to the state before starting the rounds.\n  AddRoundKey(0, state, RoundKey);\n\n  // There will be Nr rounds.\n  // The first Nr-1 rounds are identical.\n  // These Nr rounds are executed in the loop below.\n  // Last one without MixColumns()\n  for (round = 1; ; ++round)\n  {\n    SubBytes(state);\n    ShiftRows(state);\n    if (round == Nr) {\n      break;\n    }\n    MixColumns(state);\n    AddRoundKey(round, state, RoundKey);\n  }\n  // Add round key to last round\n  AddRoundKey(Nr, state, RoundKey);\n}\n\n#if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)\nstatic void InvCipher(state_t* state, const uint8_t* RoundKey)\n{\n  uint8_t round = 0;\n\n  // Add the First round key to the state before starting the rounds.\n  AddRoundKey(Nr, state, RoundKey);\n\n  // There will be Nr rounds.\n  // The first Nr-1 rounds are identical.\n  // These Nr rounds are executed in the loop below.\n  // Last one without InvMixColumn()\n  for (round = (Nr - 1); ; --round)\n  {\n    InvShiftRows(state);\n    InvSubBytes(state);\n    AddRoundKey(round, state, RoundKey);\n    if (round == 0) {\n      break;\n    }\n    InvMixColumns(state);\n  }\n\n}\n#endif // #if (defined(CBC) && CBC == 1) || (defined(ECB) && ECB == 1)\n\n/*****************************************************************************/\n/* Public functions:                                                         */\n/*****************************************************************************/\n#if defined(ECB) && (ECB == 1)\n\n\nvoid AES_ECB_encrypt(const struct AES_ctx* ctx, uint8_t* buf)\n{\n  // The next function call encrypts the PlainText with the Key using AES algorithm.\n  Cipher((state_t*)buf, ctx->RoundKey);\n}\n\nvoid AES_ECB_decrypt(const struct AES_ctx* ctx, uint8_t* buf)\n{\n  // The next function call decrypts the PlainText with the Key using AES algorithm.\n  InvCipher((state_t*)buf, ctx->RoundKey);\n}\n\n\n#endif // #if defined(ECB) && (ECB == 1)\n\n\n\n\n\n#if defined(CBC) && (CBC == 1)\n\n\nstatic void XorWithIv(uint8_t* buf, const uint8_t* Iv)\n{\n  uint8_t i;\n  for (i = 0; i < AES_BLOCKLEN; ++i) // The block in AES is always 128bit no matter the key size\n  {\n    buf[i] ^= Iv[i];\n  }\n}\n\nvoid AES_CBC_encrypt_buffer(struct AES_ctx *ctx, uint8_t* buf, size_t length)\n{\n  size_t i;\n  uint8_t *Iv = ctx->Iv;\n  for (i = 0; i < length; i += AES_BLOCKLEN)\n  {\n    XorWithIv(buf, Iv);\n    Cipher((state_t*)buf, ctx->RoundKey);\n    Iv = buf;\n    buf += AES_BLOCKLEN;\n  }\n  /* store Iv in ctx for next call */\n  memcpy(ctx->Iv, Iv, AES_BLOCKLEN);\n}\n\nvoid AES_CBC_decrypt_buffer(struct AES_ctx* ctx, uint8_t* buf, size_t length)\n{\n  size_t i;\n  uint8_t storeNextIv[AES_BLOCKLEN];\n  for (i = 0; i < length; i += AES_BLOCKLEN)\n  {\n    memcpy(storeNextIv, buf, AES_BLOCKLEN);\n    InvCipher((state_t*)buf, ctx->RoundKey);\n    XorWithIv(buf, ctx->Iv);\n    memcpy(ctx->Iv, storeNextIv, AES_BLOCKLEN);\n    buf += AES_BLOCKLEN;\n  }\n\n}\n\n#endif // #if defined(CBC) && (CBC == 1)\n\n\n\n#if defined(CTR) && (CTR == 1)\n\n/* Symmetrical operation: same function for encrypting as for decrypting. Note any IV/nonce should never be reused with the same key */\nvoid AES_CTR_xcrypt_buffer(struct AES_ctx* ctx, uint8_t* buf, size_t length)\n{\n  uint8_t buffer[AES_BLOCKLEN];\n  \n  size_t i;\n  int bi;\n  for (i = 0, bi = AES_BLOCKLEN; i < length; ++i, ++bi)\n  {\n    if (bi == AES_BLOCKLEN) /* we need to regen xor compliment in buffer */\n    {\n      \n      memcpy(buffer, ctx->Iv, AES_BLOCKLEN);\n      Cipher((state_t*)buffer,ctx->RoundKey);\n\n      /* Increment Iv and handle overflow */\n      for (bi = (AES_BLOCKLEN - 1); bi >= 0; --bi)\n      {\n\t/* inc will overflow */\n        if (ctx->Iv[bi] == 255)\n\t{\n          ctx->Iv[bi] = 0;\n          continue;\n        } \n        ctx->Iv[bi] += 1;\n        break;   \n      }\n      bi = 0;\n    }\n\n    buf[i] = (buf[i] ^ buffer[bi]);\n  }\n}\n\n#endif // #if defined(CTR) && (CTR == 1)\n",
    "assembly": "\nrepos/aes.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 <KeyExpansion>:\n       0:\tf3 0f 1e fa          \tendbr64 \n       4:\t55                   \tpush   %rbp\n       5:\t48 89 e5             \tmov    %rsp,%rbp\n       8:\t48 83 ec 30          \tsub    $0x30,%rsp\n       c:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n      10:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n      14:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n      1b:\t00 00 \n      1d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n      21:\t31 c0                \txor    %eax,%eax\n      23:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n      2a:\te9 a2 00 00 00       \tjmp    d1 <KeyExpansion+0xd1>\n      2f:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n      32:\tc1 e0 02             \tshl    $0x2,%eax\n      35:\t89 c2                \tmov    %eax,%edx\n      37:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n      3b:\t48 01 d0             \tadd    %rdx,%rax\n      3e:\t8b 55 e8             \tmov    -0x18(%rbp),%edx\n      41:\tc1 e2 02             \tshl    $0x2,%edx\n      44:\t89 d1                \tmov    %edx,%ecx\n      46:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n      4a:\t48 01 ca             \tadd    %rcx,%rdx\n      4d:\t0f b6 00             \tmovzbl (%rax),%eax\n      50:\t88 02                \tmov    %al,(%rdx)\n      52:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n      55:\tc1 e0 02             \tshl    $0x2,%eax\n      58:\t83 c0 01             \tadd    $0x1,%eax\n      5b:\t89 c2                \tmov    %eax,%edx\n      5d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n      61:\t48 01 d0             \tadd    %rdx,%rax\n      64:\t8b 55 e8             \tmov    -0x18(%rbp),%edx\n      67:\tc1 e2 02             \tshl    $0x2,%edx\n      6a:\t83 c2 01             \tadd    $0x1,%edx\n      6d:\t89 d1                \tmov    %edx,%ecx\n      6f:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n      73:\t48 01 ca             \tadd    %rcx,%rdx\n      76:\t0f b6 00             \tmovzbl (%rax),%eax\n      79:\t88 02                \tmov    %al,(%rdx)\n      7b:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n      7e:\tc1 e0 02             \tshl    $0x2,%eax\n      81:\t83 c0 02             \tadd    $0x2,%eax\n      84:\t89 c2                \tmov    %eax,%edx\n      86:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n      8a:\t48 01 d0             \tadd    %rdx,%rax\n      8d:\t8b 55 e8             \tmov    -0x18(%rbp),%edx\n      90:\tc1 e2 02             \tshl    $0x2,%edx\n      93:\t83 c2 02             \tadd    $0x2,%edx\n      96:\t89 d1                \tmov    %edx,%ecx\n      98:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n      9c:\t48 01 ca             \tadd    %rcx,%rdx\n      9f:\t0f b6 00             \tmovzbl (%rax),%eax\n      a2:\t88 02                \tmov    %al,(%rdx)\n      a4:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n      a7:\tc1 e0 02             \tshl    $0x2,%eax\n      aa:\t83 c0 03             \tadd    $0x3,%eax\n      ad:\t89 c2                \tmov    %eax,%edx\n      af:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n      b3:\t48 01 d0             \tadd    %rdx,%rax\n      b6:\t8b 55 e8             \tmov    -0x18(%rbp),%edx\n      b9:\tc1 e2 02             \tshl    $0x2,%edx\n      bc:\t83 c2 03             \tadd    $0x3,%edx\n      bf:\t89 d1                \tmov    %edx,%ecx\n      c1:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n      c5:\t48 01 ca             \tadd    %rcx,%rdx\n      c8:\t0f b6 00             \tmovzbl (%rax),%eax\n      cb:\t88 02                \tmov    %al,(%rdx)\n      cd:\t83 45 e8 01          \taddl   $0x1,-0x18(%rbp)\n      d1:\t83 7d e8 03          \tcmpl   $0x3,-0x18(%rbp)\n      d5:\t0f 86 54 ff ff ff    \tjbe    2f <KeyExpansion+0x2f>\n      db:\tc7 45 e8 04 00 00 00 \tmovl   $0x4,-0x18(%rbp)\n      e2:\te9 b7 01 00 00       \tjmp    29e <KeyExpansion+0x29e>\n      e7:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n      ea:\t83 e8 01             \tsub    $0x1,%eax\n      ed:\tc1 e0 02             \tshl    $0x2,%eax\n      f0:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n      f3:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n      f6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n      fa:\t48 01 d0             \tadd    %rdx,%rax\n      fd:\t0f b6 00             \tmovzbl (%rax),%eax\n     100:\t88 45 f4             \tmov    %al,-0xc(%rbp)\n     103:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     106:\t83 c0 01             \tadd    $0x1,%eax\n     109:\t89 c2                \tmov    %eax,%edx\n     10b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     10f:\t48 01 d0             \tadd    %rdx,%rax\n     112:\t0f b6 00             \tmovzbl (%rax),%eax\n     115:\t88 45 f5             \tmov    %al,-0xb(%rbp)\n     118:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     11b:\t83 c0 02             \tadd    $0x2,%eax\n     11e:\t89 c2                \tmov    %eax,%edx\n     120:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     124:\t48 01 d0             \tadd    %rdx,%rax\n     127:\t0f b6 00             \tmovzbl (%rax),%eax\n     12a:\t88 45 f6             \tmov    %al,-0xa(%rbp)\n     12d:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     130:\t83 c0 03             \tadd    $0x3,%eax\n     133:\t89 c2                \tmov    %eax,%edx\n     135:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     139:\t48 01 d0             \tadd    %rdx,%rax\n     13c:\t0f b6 00             \tmovzbl (%rax),%eax\n     13f:\t88 45 f7             \tmov    %al,-0x9(%rbp)\n     142:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     145:\t83 e0 03             \tand    $0x3,%eax\n     148:\t85 c0                \ttest   %eax,%eax\n     14a:\t0f 85 9b 00 00 00    \tjne    1eb <KeyExpansion+0x1eb>\n     150:\t0f b6 45 f4          \tmovzbl -0xc(%rbp),%eax\n     154:\t88 45 e7             \tmov    %al,-0x19(%rbp)\n     157:\t0f b6 45 f5          \tmovzbl -0xb(%rbp),%eax\n     15b:\t88 45 f4             \tmov    %al,-0xc(%rbp)\n     15e:\t0f b6 45 f6          \tmovzbl -0xa(%rbp),%eax\n     162:\t88 45 f5             \tmov    %al,-0xb(%rbp)\n     165:\t0f b6 45 f7          \tmovzbl -0x9(%rbp),%eax\n     169:\t88 45 f6             \tmov    %al,-0xa(%rbp)\n     16c:\t0f b6 45 e7          \tmovzbl -0x19(%rbp),%eax\n     170:\t88 45 f7             \tmov    %al,-0x9(%rbp)\n     173:\t0f b6 45 f4          \tmovzbl -0xc(%rbp),%eax\n     177:\t0f b6 c0             \tmovzbl %al,%eax\n     17a:\t48 98                \tcltq   \n     17c:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 183 <KeyExpansion+0x183>\n     183:\t0f b6 04 10          \tmovzbl (%rax,%rdx,1),%eax\n     187:\t88 45 f4             \tmov    %al,-0xc(%rbp)\n     18a:\t0f b6 45 f5          \tmovzbl -0xb(%rbp),%eax\n     18e:\t0f b6 c0             \tmovzbl %al,%eax\n     191:\t48 98                \tcltq   \n     193:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 19a <KeyExpansion+0x19a>\n     19a:\t0f b6 04 10          \tmovzbl (%rax,%rdx,1),%eax\n     19e:\t88 45 f5             \tmov    %al,-0xb(%rbp)\n     1a1:\t0f b6 45 f6          \tmovzbl -0xa(%rbp),%eax\n     1a5:\t0f b6 c0             \tmovzbl %al,%eax\n     1a8:\t48 98                \tcltq   \n     1aa:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 1b1 <KeyExpansion+0x1b1>\n     1b1:\t0f b6 04 10          \tmovzbl (%rax,%rdx,1),%eax\n     1b5:\t88 45 f6             \tmov    %al,-0xa(%rbp)\n     1b8:\t0f b6 45 f7          \tmovzbl -0x9(%rbp),%eax\n     1bc:\t0f b6 c0             \tmovzbl %al,%eax\n     1bf:\t48 98                \tcltq   \n     1c1:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 1c8 <KeyExpansion+0x1c8>\n     1c8:\t0f b6 04 10          \tmovzbl (%rax,%rdx,1),%eax\n     1cc:\t88 45 f7             \tmov    %al,-0x9(%rbp)\n     1cf:\t0f b6 55 f4          \tmovzbl -0xc(%rbp),%edx\n     1d3:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     1d6:\tc1 e8 02             \tshr    $0x2,%eax\n     1d9:\t89 c1                \tmov    %eax,%ecx\n     1db:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1e2 <KeyExpansion+0x1e2>\n     1e2:\t0f b6 04 01          \tmovzbl (%rcx,%rax,1),%eax\n     1e6:\t31 d0                \txor    %edx,%eax\n     1e8:\t88 45 f4             \tmov    %al,-0xc(%rbp)\n     1eb:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     1ee:\tc1 e0 02             \tshl    $0x2,%eax\n     1f1:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n     1f4:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     1f7:\t83 e8 04             \tsub    $0x4,%eax\n     1fa:\tc1 e0 02             \tshl    $0x2,%eax\n     1fd:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     200:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     203:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     207:\t48 01 d0             \tadd    %rdx,%rax\n     20a:\t0f b6 08             \tmovzbl (%rax),%ecx\n     20d:\t0f b6 55 f4          \tmovzbl -0xc(%rbp),%edx\n     211:\t8b 75 f0             \tmov    -0x10(%rbp),%esi\n     214:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     218:\t48 01 f0             \tadd    %rsi,%rax\n     21b:\t31 ca                \txor    %ecx,%edx\n     21d:\t88 10                \tmov    %dl,(%rax)\n     21f:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     222:\t83 c0 01             \tadd    $0x1,%eax\n     225:\t89 c2                \tmov    %eax,%edx\n     227:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     22b:\t48 01 d0             \tadd    %rdx,%rax\n     22e:\t0f b6 08             \tmovzbl (%rax),%ecx\n     231:\t0f b6 55 f5          \tmovzbl -0xb(%rbp),%edx\n     235:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n     238:\t83 c0 01             \tadd    $0x1,%eax\n     23b:\t89 c6                \tmov    %eax,%esi\n     23d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     241:\t48 01 f0             \tadd    %rsi,%rax\n     244:\t31 ca                \txor    %ecx,%edx\n     246:\t88 10                \tmov    %dl,(%rax)\n     248:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     24b:\t83 c0 02             \tadd    $0x2,%eax\n     24e:\t89 c2                \tmov    %eax,%edx\n     250:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     254:\t48 01 d0             \tadd    %rdx,%rax\n     257:\t0f b6 08             \tmovzbl (%rax),%ecx\n     25a:\t0f b6 55 f6          \tmovzbl -0xa(%rbp),%edx\n     25e:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n     261:\t83 c0 02             \tadd    $0x2,%eax\n     264:\t89 c6                \tmov    %eax,%esi\n     266:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     26a:\t48 01 f0             \tadd    %rsi,%rax\n     26d:\t31 ca                \txor    %ecx,%edx\n     26f:\t88 10                \tmov    %dl,(%rax)\n     271:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     274:\t83 c0 03             \tadd    $0x3,%eax\n     277:\t89 c2                \tmov    %eax,%edx\n     279:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     27d:\t48 01 d0             \tadd    %rdx,%rax\n     280:\t0f b6 08             \tmovzbl (%rax),%ecx\n     283:\t0f b6 55 f7          \tmovzbl -0x9(%rbp),%edx\n     287:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n     28a:\t83 c0 03             \tadd    $0x3,%eax\n     28d:\t89 c6                \tmov    %eax,%esi\n     28f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     293:\t48 01 f0             \tadd    %rsi,%rax\n     296:\t31 ca                \txor    %ecx,%edx\n     298:\t88 10                \tmov    %dl,(%rax)\n     29a:\t83 45 e8 01          \taddl   $0x1,-0x18(%rbp)\n     29e:\t83 7d e8 2b          \tcmpl   $0x2b,-0x18(%rbp)\n     2a2:\t0f 86 3f fe ff ff    \tjbe    e7 <KeyExpansion+0xe7>\n     2a8:\t90                   \tnop\n     2a9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     2ad:\t64 48 2b 04 25 28 00 \tsub    %fs:0x28,%rax\n     2b4:\t00 00 \n     2b6:\t74 05                \tje     2bd <KeyExpansion+0x2bd>\n     2b8:\te8 00 00 00 00       \tcall   2bd <KeyExpansion+0x2bd>\n     2bd:\tc9                   \tleave  \n     2be:\tc3                   \tret    \n\n00000000000002bf <AES_init_ctx>:\n     2bf:\tf3 0f 1e fa          \tendbr64 \n     2c3:\t55                   \tpush   %rbp\n     2c4:\t48 89 e5             \tmov    %rsp,%rbp\n     2c7:\t48 83 ec 10          \tsub    $0x10,%rsp\n     2cb:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     2cf:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n     2d3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     2d7:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     2db:\t48 89 d6             \tmov    %rdx,%rsi\n     2de:\t48 89 c7             \tmov    %rax,%rdi\n     2e1:\te8 1a fd ff ff       \tcall   0 <KeyExpansion>\n     2e6:\t90                   \tnop\n     2e7:\tc9                   \tleave  \n     2e8:\tc3                   \tret    \n\n00000000000002e9 <AES_init_ctx_iv>:\n     2e9:\tf3 0f 1e fa          \tendbr64 \n     2ed:\t55                   \tpush   %rbp\n     2ee:\t48 89 e5             \tmov    %rsp,%rbp\n     2f1:\t48 83 ec 20          \tsub    $0x20,%rsp\n     2f5:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     2f9:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n     2fd:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n     301:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     305:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     309:\t48 89 d6             \tmov    %rdx,%rsi\n     30c:\t48 89 c7             \tmov    %rax,%rdi\n     30f:\te8 ec fc ff ff       \tcall   0 <KeyExpansion>\n     314:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     318:\t48 8d 88 b0 00 00 00 \tlea    0xb0(%rax),%rcx\n     31f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     323:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n     327:\t48 8b 00             \tmov    (%rax),%rax\n     32a:\t48 89 01             \tmov    %rax,(%rcx)\n     32d:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     331:\t90                   \tnop\n     332:\tc9                   \tleave  \n     333:\tc3                   \tret    \n\n0000000000000334 <AES_ctx_set_iv>:\n     334:\tf3 0f 1e fa          \tendbr64 \n     338:\t55                   \tpush   %rbp\n     339:\t48 89 e5             \tmov    %rsp,%rbp\n     33c:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     340:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n     344:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     348:\t48 8d 88 b0 00 00 00 \tlea    0xb0(%rax),%rcx\n     34f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     353:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n     357:\t48 8b 00             \tmov    (%rax),%rax\n     35a:\t48 89 01             \tmov    %rax,(%rcx)\n     35d:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     361:\t90                   \tnop\n     362:\t5d                   \tpop    %rbp\n     363:\tc3                   \tret    \n\n0000000000000364 <AddRoundKey>:\n     364:\tf3 0f 1e fa          \tendbr64 \n     368:\t55                   \tpush   %rbp\n     369:\t48 89 e5             \tmov    %rsp,%rbp\n     36c:\t89 f8                \tmov    %edi,%eax\n     36e:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n     372:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n     376:\t88 45 ec             \tmov    %al,-0x14(%rbp)\n     379:\tc6 45 fe 00          \tmovb   $0x0,-0x2(%rbp)\n     37d:\teb 7c                \tjmp    3fb <AddRoundKey+0x97>\n     37f:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n     383:\teb 6c                \tjmp    3f1 <AddRoundKey+0x8d>\n     385:\t0f b6 45 fe          \tmovzbl -0x2(%rbp),%eax\n     389:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n     38d:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n     391:\t48 63 d2             \tmovslq %edx,%rdx\n     394:\t48 98                \tcltq   \n     396:\t48 c1 e0 02          \tshl    $0x2,%rax\n     39a:\t48 01 c8             \tadd    %rcx,%rax\n     39d:\t48 01 d0             \tadd    %rdx,%rax\n     3a0:\t0f b6 30             \tmovzbl (%rax),%esi\n     3a3:\t0f b6 45 ec          \tmovzbl -0x14(%rbp),%eax\n     3a7:\t8d 14 85 00 00 00 00 \tlea    0x0(,%rax,4),%edx\n     3ae:\t0f b6 45 fe          \tmovzbl -0x2(%rbp),%eax\n     3b2:\t01 d0                \tadd    %edx,%eax\n     3b4:\t8d 14 85 00 00 00 00 \tlea    0x0(,%rax,4),%edx\n     3bb:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     3bf:\t01 d0                \tadd    %edx,%eax\n     3c1:\t48 63 d0             \tmovslq %eax,%rdx\n     3c4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     3c8:\t48 01 d0             \tadd    %rdx,%rax\n     3cb:\t0f b6 10             \tmovzbl (%rax),%edx\n     3ce:\t0f b6 45 fe          \tmovzbl -0x2(%rbp),%eax\n     3d2:\t0f b6 4d ff          \tmovzbl -0x1(%rbp),%ecx\n     3d6:\t31 f2                \txor    %esi,%edx\n     3d8:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n     3dc:\t48 63 c9             \tmovslq %ecx,%rcx\n     3df:\t48 98                \tcltq   \n     3e1:\t48 c1 e0 02          \tshl    $0x2,%rax\n     3e5:\t48 01 f0             \tadd    %rsi,%rax\n     3e8:\t48 01 c8             \tadd    %rcx,%rax\n     3eb:\t88 10                \tmov    %dl,(%rax)\n     3ed:\t80 45 ff 01          \taddb   $0x1,-0x1(%rbp)\n     3f1:\t80 7d ff 03          \tcmpb   $0x3,-0x1(%rbp)\n     3f5:\t76 8e                \tjbe    385 <AddRoundKey+0x21>\n     3f7:\t80 45 fe 01          \taddb   $0x1,-0x2(%rbp)\n     3fb:\t80 7d fe 03          \tcmpb   $0x3,-0x2(%rbp)\n     3ff:\t0f 86 7a ff ff ff    \tjbe    37f <AddRoundKey+0x1b>\n     405:\t90                   \tnop\n     406:\t90                   \tnop\n     407:\t5d                   \tpop    %rbp\n     408:\tc3                   \tret    \n\n0000000000000409 <SubBytes>:\n     409:\tf3 0f 1e fa          \tendbr64 \n     40d:\t55                   \tpush   %rbp\n     40e:\t48 89 e5             \tmov    %rsp,%rbp\n     411:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     415:\tc6 45 fe 00          \tmovb   $0x0,-0x2(%rbp)\n     419:\teb 60                \tjmp    47b <SubBytes+0x72>\n     41b:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n     41f:\teb 50                \tjmp    471 <SubBytes+0x68>\n     421:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     425:\t0f b6 55 fe          \tmovzbl -0x2(%rbp),%edx\n     429:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n     42d:\t48 63 d2             \tmovslq %edx,%rdx\n     430:\t48 98                \tcltq   \n     432:\t48 c1 e0 02          \tshl    $0x2,%rax\n     436:\t48 01 c8             \tadd    %rcx,%rax\n     439:\t48 01 d0             \tadd    %rdx,%rax\n     43c:\t0f b6 00             \tmovzbl (%rax),%eax\n     43f:\t0f b6 c0             \tmovzbl %al,%eax\n     442:\t0f b6 4d ff          \tmovzbl -0x1(%rbp),%ecx\n     446:\t0f b6 75 fe          \tmovzbl -0x2(%rbp),%esi\n     44a:\t48 98                \tcltq   \n     44c:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 453 <SubBytes+0x4a>\n     453:\t0f b6 14 10          \tmovzbl (%rax,%rdx,1),%edx\n     457:\t48 8b 7d e8          \tmov    -0x18(%rbp),%rdi\n     45b:\t48 63 f6             \tmovslq %esi,%rsi\n     45e:\t48 63 c1             \tmovslq %ecx,%rax\n     461:\t48 c1 e0 02          \tshl    $0x2,%rax\n     465:\t48 01 f8             \tadd    %rdi,%rax\n     468:\t48 01 f0             \tadd    %rsi,%rax\n     46b:\t88 10                \tmov    %dl,(%rax)\n     46d:\t80 45 ff 01          \taddb   $0x1,-0x1(%rbp)\n     471:\t80 7d ff 03          \tcmpb   $0x3,-0x1(%rbp)\n     475:\t76 aa                \tjbe    421 <SubBytes+0x18>\n     477:\t80 45 fe 01          \taddb   $0x1,-0x2(%rbp)\n     47b:\t80 7d fe 03          \tcmpb   $0x3,-0x2(%rbp)\n     47f:\t76 9a                \tjbe    41b <SubBytes+0x12>\n     481:\t90                   \tnop\n     482:\t90                   \tnop\n     483:\t5d                   \tpop    %rbp\n     484:\tc3                   \tret    \n\n0000000000000485 <ShiftRows>:\n     485:\tf3 0f 1e fa          \tendbr64 \n     489:\t55                   \tpush   %rbp\n     48a:\t48 89 e5             \tmov    %rsp,%rbp\n     48d:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     491:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     495:\t0f b6 40 01          \tmovzbl 0x1(%rax),%eax\n     499:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     49c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4a0:\t0f b6 50 05          \tmovzbl 0x5(%rax),%edx\n     4a4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4a8:\t88 50 01             \tmov    %dl,0x1(%rax)\n     4ab:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4af:\t0f b6 50 09          \tmovzbl 0x9(%rax),%edx\n     4b3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4b7:\t88 50 05             \tmov    %dl,0x5(%rax)\n     4ba:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4be:\t0f b6 50 0d          \tmovzbl 0xd(%rax),%edx\n     4c2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4c6:\t88 50 09             \tmov    %dl,0x9(%rax)\n     4c9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4cd:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n     4d1:\t88 50 0d             \tmov    %dl,0xd(%rax)\n     4d4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4d8:\t0f b6 40 02          \tmovzbl 0x2(%rax),%eax\n     4dc:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     4df:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4e3:\t0f b6 50 0a          \tmovzbl 0xa(%rax),%edx\n     4e7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4eb:\t88 50 02             \tmov    %dl,0x2(%rax)\n     4ee:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4f2:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n     4f6:\t88 50 0a             \tmov    %dl,0xa(%rax)\n     4f9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4fd:\t0f b6 40 06          \tmovzbl 0x6(%rax),%eax\n     501:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     504:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     508:\t0f b6 50 0e          \tmovzbl 0xe(%rax),%edx\n     50c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     510:\t88 50 06             \tmov    %dl,0x6(%rax)\n     513:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     517:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n     51b:\t88 50 0e             \tmov    %dl,0xe(%rax)\n     51e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     522:\t0f b6 40 03          \tmovzbl 0x3(%rax),%eax\n     526:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     529:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     52d:\t0f b6 50 0f          \tmovzbl 0xf(%rax),%edx\n     531:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     535:\t88 50 03             \tmov    %dl,0x3(%rax)\n     538:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     53c:\t0f b6 50 0b          \tmovzbl 0xb(%rax),%edx\n     540:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     544:\t88 50 0f             \tmov    %dl,0xf(%rax)\n     547:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     54b:\t0f b6 50 07          \tmovzbl 0x7(%rax),%edx\n     54f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     553:\t88 50 0b             \tmov    %dl,0xb(%rax)\n     556:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     55a:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n     55e:\t88 50 07             \tmov    %dl,0x7(%rax)\n     561:\t90                   \tnop\n     562:\t5d                   \tpop    %rbp\n     563:\tc3                   \tret    \n\n0000000000000564 <xtime>:\n     564:\tf3 0f 1e fa          \tendbr64 \n     568:\t55                   \tpush   %rbp\n     569:\t48 89 e5             \tmov    %rsp,%rbp\n     56c:\t89 f8                \tmov    %edi,%eax\n     56e:\t88 45 fc             \tmov    %al,-0x4(%rbp)\n     571:\t0f b6 45 fc          \tmovzbl -0x4(%rbp),%eax\n     575:\t01 c0                \tadd    %eax,%eax\n     577:\t89 c1                \tmov    %eax,%ecx\n     579:\t0f b6 45 fc          \tmovzbl -0x4(%rbp),%eax\n     57d:\tc0 e8 07             \tshr    $0x7,%al\n     580:\t89 c2                \tmov    %eax,%edx\n     582:\t89 d0                \tmov    %edx,%eax\n     584:\t01 c0                \tadd    %eax,%eax\n     586:\t01 d0                \tadd    %edx,%eax\n     588:\t8d 14 c5 00 00 00 00 \tlea    0x0(,%rax,8),%edx\n     58f:\t01 d0                \tadd    %edx,%eax\n     591:\t31 c8                \txor    %ecx,%eax\n     593:\t5d                   \tpop    %rbp\n     594:\tc3                   \tret    \n\n0000000000000595 <MixColumns>:\n     595:\tf3 0f 1e fa          \tendbr64 \n     599:\t55                   \tpush   %rbp\n     59a:\t48 89 e5             \tmov    %rsp,%rbp\n     59d:\t48 83 ec 18          \tsub    $0x18,%rsp\n     5a1:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     5a5:\tc6 45 fc 00          \tmovb   $0x0,-0x4(%rbp)\n     5a9:\te9 b8 01 00 00       \tjmp    766 <MixColumns+0x1d1>\n     5ae:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     5b2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     5b6:\t48 63 d2             \tmovslq %edx,%rdx\n     5b9:\t0f b6 04 90          \tmovzbl (%rax,%rdx,4),%eax\n     5bd:\t88 45 fd             \tmov    %al,-0x3(%rbp)\n     5c0:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     5c4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     5c8:\t48 63 d2             \tmovslq %edx,%rdx\n     5cb:\t0f b6 0c 90          \tmovzbl (%rax,%rdx,4),%ecx\n     5cf:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     5d3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     5d7:\t48 63 d2             \tmovslq %edx,%rdx\n     5da:\t0f b6 44 90 01       \tmovzbl 0x1(%rax,%rdx,4),%eax\n     5df:\t31 c1                \txor    %eax,%ecx\n     5e1:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     5e5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     5e9:\t48 63 d2             \tmovslq %edx,%rdx\n     5ec:\t0f b6 44 90 02       \tmovzbl 0x2(%rax,%rdx,4),%eax\n     5f1:\t31 c1                \txor    %eax,%ecx\n     5f3:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     5f7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     5fb:\t48 63 d2             \tmovslq %edx,%rdx\n     5fe:\t0f b6 44 90 03       \tmovzbl 0x3(%rax,%rdx,4),%eax\n     603:\t31 c8                \txor    %ecx,%eax\n     605:\t88 45 fe             \tmov    %al,-0x2(%rbp)\n     608:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     60c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     610:\t48 63 d2             \tmovslq %edx,%rdx\n     613:\t0f b6 0c 90          \tmovzbl (%rax,%rdx,4),%ecx\n     617:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     61b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     61f:\t48 63 d2             \tmovslq %edx,%rdx\n     622:\t0f b6 44 90 01       \tmovzbl 0x1(%rax,%rdx,4),%eax\n     627:\t31 c8                \txor    %ecx,%eax\n     629:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     62c:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     630:\t89 c7                \tmov    %eax,%edi\n     632:\te8 2d ff ff ff       \tcall   564 <xtime>\n     637:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     63a:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     63e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     642:\t48 63 d2             \tmovslq %edx,%rdx\n     645:\t0f b6 0c 90          \tmovzbl (%rax,%rdx,4),%ecx\n     649:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     64d:\t32 45 fe             \txor    -0x2(%rbp),%al\n     650:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     654:\t31 c1                \txor    %eax,%ecx\n     656:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     65a:\t48 63 d2             \tmovslq %edx,%rdx\n     65d:\t88 0c 90             \tmov    %cl,(%rax,%rdx,4)\n     660:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     664:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     668:\t48 63 d2             \tmovslq %edx,%rdx\n     66b:\t0f b6 4c 90 01       \tmovzbl 0x1(%rax,%rdx,4),%ecx\n     670:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     674:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     678:\t48 63 d2             \tmovslq %edx,%rdx\n     67b:\t0f b6 44 90 02       \tmovzbl 0x2(%rax,%rdx,4),%eax\n     680:\t31 c8                \txor    %ecx,%eax\n     682:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     685:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     689:\t89 c7                \tmov    %eax,%edi\n     68b:\te8 d4 fe ff ff       \tcall   564 <xtime>\n     690:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     693:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     697:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     69b:\t48 63 d2             \tmovslq %edx,%rdx\n     69e:\t0f b6 4c 90 01       \tmovzbl 0x1(%rax,%rdx,4),%ecx\n     6a3:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     6a7:\t32 45 fe             \txor    -0x2(%rbp),%al\n     6aa:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     6ae:\t31 c1                \txor    %eax,%ecx\n     6b0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     6b4:\t48 63 d2             \tmovslq %edx,%rdx\n     6b7:\t88 4c 90 01          \tmov    %cl,0x1(%rax,%rdx,4)\n     6bb:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     6bf:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     6c3:\t48 63 d2             \tmovslq %edx,%rdx\n     6c6:\t0f b6 4c 90 02       \tmovzbl 0x2(%rax,%rdx,4),%ecx\n     6cb:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     6cf:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     6d3:\t48 63 d2             \tmovslq %edx,%rdx\n     6d6:\t0f b6 44 90 03       \tmovzbl 0x3(%rax,%rdx,4),%eax\n     6db:\t31 c8                \txor    %ecx,%eax\n     6dd:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     6e0:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     6e4:\t89 c7                \tmov    %eax,%edi\n     6e6:\te8 79 fe ff ff       \tcall   564 <xtime>\n     6eb:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     6ee:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     6f2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     6f6:\t48 63 d2             \tmovslq %edx,%rdx\n     6f9:\t0f b6 4c 90 02       \tmovzbl 0x2(%rax,%rdx,4),%ecx\n     6fe:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     702:\t32 45 fe             \txor    -0x2(%rbp),%al\n     705:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     709:\t31 c1                \txor    %eax,%ecx\n     70b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     70f:\t48 63 d2             \tmovslq %edx,%rdx\n     712:\t88 4c 90 02          \tmov    %cl,0x2(%rax,%rdx,4)\n     716:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     71a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     71e:\t48 63 d2             \tmovslq %edx,%rdx\n     721:\t0f b6 44 90 03       \tmovzbl 0x3(%rax,%rdx,4),%eax\n     726:\t32 45 fd             \txor    -0x3(%rbp),%al\n     729:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     72c:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     730:\t89 c7                \tmov    %eax,%edi\n     732:\te8 2d fe ff ff       \tcall   564 <xtime>\n     737:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     73a:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     73e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     742:\t48 63 d2             \tmovslq %edx,%rdx\n     745:\t0f b6 4c 90 03       \tmovzbl 0x3(%rax,%rdx,4),%ecx\n     74a:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     74e:\t32 45 fe             \txor    -0x2(%rbp),%al\n     751:\t0f b6 55 fc          \tmovzbl -0x4(%rbp),%edx\n     755:\t31 c1                \txor    %eax,%ecx\n     757:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     75b:\t48 63 d2             \tmovslq %edx,%rdx\n     75e:\t88 4c 90 03          \tmov    %cl,0x3(%rax,%rdx,4)\n     762:\t80 45 fc 01          \taddb   $0x1,-0x4(%rbp)\n     766:\t80 7d fc 03          \tcmpb   $0x3,-0x4(%rbp)\n     76a:\t0f 86 3e fe ff ff    \tjbe    5ae <MixColumns+0x19>\n     770:\t90                   \tnop\n     771:\t90                   \tnop\n     772:\tc9                   \tleave  \n     773:\tc3                   \tret    \n\n0000000000000774 <InvMixColumns>:\n     774:\tf3 0f 1e fa          \tendbr64 \n     778:\t55                   \tpush   %rbp\n     779:\t48 89 e5             \tmov    %rsp,%rbp\n     77c:\t41 54                \tpush   %r12\n     77e:\t53                   \tpush   %rbx\n     77f:\t48 83 ec 18          \tsub    $0x18,%rsp\n     783:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     787:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n     78e:\te9 9a 07 00 00       \tjmp    f2d <InvMixColumns+0x7b9>\n     793:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     797:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     79a:\t48 63 d2             \tmovslq %edx,%rdx\n     79d:\t0f b6 04 90          \tmovzbl (%rax,%rdx,4),%eax\n     7a1:\t88 45 e8             \tmov    %al,-0x18(%rbp)\n     7a4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     7a8:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     7ab:\t48 63 d2             \tmovslq %edx,%rdx\n     7ae:\t0f b6 44 90 01       \tmovzbl 0x1(%rax,%rdx,4),%eax\n     7b3:\t88 45 e9             \tmov    %al,-0x17(%rbp)\n     7b6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     7ba:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     7bd:\t48 63 d2             \tmovslq %edx,%rdx\n     7c0:\t0f b6 44 90 02       \tmovzbl 0x2(%rax,%rdx,4),%eax\n     7c5:\t88 45 ea             \tmov    %al,-0x16(%rbp)\n     7c8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     7cc:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     7cf:\t48 63 d2             \tmovslq %edx,%rdx\n     7d2:\t0f b6 44 90 03       \tmovzbl 0x3(%rax,%rdx,4),%eax\n     7d7:\t88 45 eb             \tmov    %al,-0x15(%rbp)\n     7da:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     7de:\t89 c7                \tmov    %eax,%edi\n     7e0:\te8 7f fd ff ff       \tcall   564 <xtime>\n     7e5:\t0f b6 c0             \tmovzbl %al,%eax\n     7e8:\t89 c7                \tmov    %eax,%edi\n     7ea:\te8 75 fd ff ff       \tcall   564 <xtime>\n     7ef:\t0f b6 c0             \tmovzbl %al,%eax\n     7f2:\t89 c7                \tmov    %eax,%edi\n     7f4:\te8 6b fd ff ff       \tcall   564 <xtime>\n     7f9:\t0f b6 c0             \tmovzbl %al,%eax\n     7fc:\t89 c7                \tmov    %eax,%edi\n     7fe:\te8 61 fd ff ff       \tcall   564 <xtime>\n     803:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     807:\t89 c7                \tmov    %eax,%edi\n     809:\te8 56 fd ff ff       \tcall   564 <xtime>\n     80e:\t0f b6 c0             \tmovzbl %al,%eax\n     811:\t89 c7                \tmov    %eax,%edi\n     813:\te8 4c fd ff ff       \tcall   564 <xtime>\n     818:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     81c:\t89 c7                \tmov    %eax,%edi\n     81e:\te8 41 fd ff ff       \tcall   564 <xtime>\n     823:\t0f b6 c0             \tmovzbl %al,%eax\n     826:\t89 c7                \tmov    %eax,%edi\n     828:\te8 37 fd ff ff       \tcall   564 <xtime>\n     82d:\t0f b6 c0             \tmovzbl %al,%eax\n     830:\t89 c7                \tmov    %eax,%edi\n     832:\te8 2d fd ff ff       \tcall   564 <xtime>\n     837:\t0f b6 c0             \tmovzbl %al,%eax\n     83a:\t89 c7                \tmov    %eax,%edi\n     83c:\te8 23 fd ff ff       \tcall   564 <xtime>\n     841:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     845:\t89 c7                \tmov    %eax,%edi\n     847:\te8 18 fd ff ff       \tcall   564 <xtime>\n     84c:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     850:\t89 c7                \tmov    %eax,%edi\n     852:\te8 0d fd ff ff       \tcall   564 <xtime>\n     857:\t0f b6 c0             \tmovzbl %al,%eax\n     85a:\t89 c7                \tmov    %eax,%edi\n     85c:\te8 03 fd ff ff       \tcall   564 <xtime>\n     861:\t0f b6 c0             \tmovzbl %al,%eax\n     864:\t89 c7                \tmov    %eax,%edi\n     866:\te8 f9 fc ff ff       \tcall   564 <xtime>\n     86b:\t0f b6 c0             \tmovzbl %al,%eax\n     86e:\t89 c7                \tmov    %eax,%edi\n     870:\te8 ef fc ff ff       \tcall   564 <xtime>\n     875:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     879:\t89 c7                \tmov    %eax,%edi\n     87b:\te8 e4 fc ff ff       \tcall   564 <xtime>\n     880:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     884:\t89 c7                \tmov    %eax,%edi\n     886:\te8 d9 fc ff ff       \tcall   564 <xtime>\n     88b:\t0f b6 c0             \tmovzbl %al,%eax\n     88e:\t89 c7                \tmov    %eax,%edi\n     890:\te8 cf fc ff ff       \tcall   564 <xtime>\n     895:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     899:\t89 c7                \tmov    %eax,%edi\n     89b:\te8 c4 fc ff ff       \tcall   564 <xtime>\n     8a0:\t0f b6 c0             \tmovzbl %al,%eax\n     8a3:\t89 c7                \tmov    %eax,%edi\n     8a5:\te8 ba fc ff ff       \tcall   564 <xtime>\n     8aa:\t0f b6 c0             \tmovzbl %al,%eax\n     8ad:\t89 c7                \tmov    %eax,%edi\n     8af:\te8 b0 fc ff ff       \tcall   564 <xtime>\n     8b4:\t0f b6 c0             \tmovzbl %al,%eax\n     8b7:\t89 c7                \tmov    %eax,%edi\n     8b9:\te8 a6 fc ff ff       \tcall   564 <xtime>\n     8be:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     8c2:\t89 c7                \tmov    %eax,%edi\n     8c4:\te8 9b fc ff ff       \tcall   564 <xtime>\n     8c9:\t89 c3                \tmov    %eax,%ebx\n     8cb:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     8cf:\t89 c7                \tmov    %eax,%edi\n     8d1:\te8 8e fc ff ff       \tcall   564 <xtime>\n     8d6:\t0f b6 c0             \tmovzbl %al,%eax\n     8d9:\t89 c7                \tmov    %eax,%edi\n     8db:\te8 84 fc ff ff       \tcall   564 <xtime>\n     8e0:\t31 c3                \txor    %eax,%ebx\n     8e2:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     8e6:\t89 c7                \tmov    %eax,%edi\n     8e8:\te8 77 fc ff ff       \tcall   564 <xtime>\n     8ed:\t0f b6 c0             \tmovzbl %al,%eax\n     8f0:\t89 c7                \tmov    %eax,%edi\n     8f2:\te8 6d fc ff ff       \tcall   564 <xtime>\n     8f7:\t0f b6 c0             \tmovzbl %al,%eax\n     8fa:\t89 c7                \tmov    %eax,%edi\n     8fc:\te8 63 fc ff ff       \tcall   564 <xtime>\n     901:\t31 c3                \txor    %eax,%ebx\n     903:\t41 89 dc             \tmov    %ebx,%r12d\n     906:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     90a:\t89 c7                \tmov    %eax,%edi\n     90c:\te8 53 fc ff ff       \tcall   564 <xtime>\n     911:\t32 45 e9             \txor    -0x17(%rbp),%al\n     914:\t89 c3                \tmov    %eax,%ebx\n     916:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     91a:\t89 c7                \tmov    %eax,%edi\n     91c:\te8 43 fc ff ff       \tcall   564 <xtime>\n     921:\t0f b6 c0             \tmovzbl %al,%eax\n     924:\t89 c7                \tmov    %eax,%edi\n     926:\te8 39 fc ff ff       \tcall   564 <xtime>\n     92b:\t0f b6 c0             \tmovzbl %al,%eax\n     92e:\t89 c7                \tmov    %eax,%edi\n     930:\te8 2f fc ff ff       \tcall   564 <xtime>\n     935:\t31 d8                \txor    %ebx,%eax\n     937:\t41 31 c4             \txor    %eax,%r12d\n     93a:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     93e:\t89 c7                \tmov    %eax,%edi\n     940:\te8 1f fc ff ff       \tcall   564 <xtime>\n     945:\t0f b6 c0             \tmovzbl %al,%eax\n     948:\t89 c7                \tmov    %eax,%edi\n     94a:\te8 15 fc ff ff       \tcall   564 <xtime>\n     94f:\t32 45 ea             \txor    -0x16(%rbp),%al\n     952:\t89 c3                \tmov    %eax,%ebx\n     954:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     958:\t89 c7                \tmov    %eax,%edi\n     95a:\te8 05 fc ff ff       \tcall   564 <xtime>\n     95f:\t0f b6 c0             \tmovzbl %al,%eax\n     962:\t89 c7                \tmov    %eax,%edi\n     964:\te8 fb fb ff ff       \tcall   564 <xtime>\n     969:\t0f b6 c0             \tmovzbl %al,%eax\n     96c:\t89 c7                \tmov    %eax,%edi\n     96e:\te8 f1 fb ff ff       \tcall   564 <xtime>\n     973:\t31 d8                \txor    %ebx,%eax\n     975:\t44 89 e3             \tmov    %r12d,%ebx\n     978:\t31 c3                \txor    %eax,%ebx\n     97a:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     97e:\t89 c7                \tmov    %eax,%edi\n     980:\te8 df fb ff ff       \tcall   564 <xtime>\n     985:\t0f b6 c0             \tmovzbl %al,%eax\n     988:\t89 c7                \tmov    %eax,%edi\n     98a:\te8 d5 fb ff ff       \tcall   564 <xtime>\n     98f:\t0f b6 c0             \tmovzbl %al,%eax\n     992:\t89 c7                \tmov    %eax,%edi\n     994:\te8 cb fb ff ff       \tcall   564 <xtime>\n     999:\t32 45 eb             \txor    -0x15(%rbp),%al\n     99c:\t89 d9                \tmov    %ebx,%ecx\n     99e:\t31 c1                \txor    %eax,%ecx\n     9a0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     9a4:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     9a7:\t48 63 d2             \tmovslq %edx,%rdx\n     9aa:\t88 0c 90             \tmov    %cl,(%rax,%rdx,4)\n     9ad:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     9b1:\t89 c7                \tmov    %eax,%edi\n     9b3:\te8 ac fb ff ff       \tcall   564 <xtime>\n     9b8:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     9bc:\t89 c7                \tmov    %eax,%edi\n     9be:\te8 a1 fb ff ff       \tcall   564 <xtime>\n     9c3:\t0f b6 c0             \tmovzbl %al,%eax\n     9c6:\t89 c7                \tmov    %eax,%edi\n     9c8:\te8 97 fb ff ff       \tcall   564 <xtime>\n     9cd:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     9d1:\t89 c7                \tmov    %eax,%edi\n     9d3:\te8 8c fb ff ff       \tcall   564 <xtime>\n     9d8:\t0f b6 c0             \tmovzbl %al,%eax\n     9db:\t89 c7                \tmov    %eax,%edi\n     9dd:\te8 82 fb ff ff       \tcall   564 <xtime>\n     9e2:\t0f b6 c0             \tmovzbl %al,%eax\n     9e5:\t89 c7                \tmov    %eax,%edi\n     9e7:\te8 78 fb ff ff       \tcall   564 <xtime>\n     9ec:\t0f b6 c0             \tmovzbl %al,%eax\n     9ef:\t89 c7                \tmov    %eax,%edi\n     9f1:\te8 6e fb ff ff       \tcall   564 <xtime>\n     9f6:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     9fa:\t89 c7                \tmov    %eax,%edi\n     9fc:\te8 63 fb ff ff       \tcall   564 <xtime>\n     a01:\t0f b6 c0             \tmovzbl %al,%eax\n     a04:\t89 c7                \tmov    %eax,%edi\n     a06:\te8 59 fb ff ff       \tcall   564 <xtime>\n     a0b:\t0f b6 c0             \tmovzbl %al,%eax\n     a0e:\t89 c7                \tmov    %eax,%edi\n     a10:\te8 4f fb ff ff       \tcall   564 <xtime>\n     a15:\t0f b6 c0             \tmovzbl %al,%eax\n     a18:\t89 c7                \tmov    %eax,%edi\n     a1a:\te8 45 fb ff ff       \tcall   564 <xtime>\n     a1f:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     a23:\t89 c7                \tmov    %eax,%edi\n     a25:\te8 3a fb ff ff       \tcall   564 <xtime>\n     a2a:\t0f b6 c0             \tmovzbl %al,%eax\n     a2d:\t89 c7                \tmov    %eax,%edi\n     a2f:\te8 30 fb ff ff       \tcall   564 <xtime>\n     a34:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     a38:\t89 c7                \tmov    %eax,%edi\n     a3a:\te8 25 fb ff ff       \tcall   564 <xtime>\n     a3f:\t0f b6 c0             \tmovzbl %al,%eax\n     a42:\t89 c7                \tmov    %eax,%edi\n     a44:\te8 1b fb ff ff       \tcall   564 <xtime>\n     a49:\t0f b6 c0             \tmovzbl %al,%eax\n     a4c:\t89 c7                \tmov    %eax,%edi\n     a4e:\te8 11 fb ff ff       \tcall   564 <xtime>\n     a53:\t0f b6 c0             \tmovzbl %al,%eax\n     a56:\t89 c7                \tmov    %eax,%edi\n     a58:\te8 07 fb ff ff       \tcall   564 <xtime>\n     a5d:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     a61:\t89 c7                \tmov    %eax,%edi\n     a63:\te8 fc fa ff ff       \tcall   564 <xtime>\n     a68:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     a6c:\t89 c7                \tmov    %eax,%edi\n     a6e:\te8 f1 fa ff ff       \tcall   564 <xtime>\n     a73:\t0f b6 c0             \tmovzbl %al,%eax\n     a76:\t89 c7                \tmov    %eax,%edi\n     a78:\te8 e7 fa ff ff       \tcall   564 <xtime>\n     a7d:\t0f b6 c0             \tmovzbl %al,%eax\n     a80:\t89 c7                \tmov    %eax,%edi\n     a82:\te8 dd fa ff ff       \tcall   564 <xtime>\n     a87:\t0f b6 c0             \tmovzbl %al,%eax\n     a8a:\t89 c7                \tmov    %eax,%edi\n     a8c:\te8 d3 fa ff ff       \tcall   564 <xtime>\n     a91:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     a95:\t89 c7                \tmov    %eax,%edi\n     a97:\te8 c8 fa ff ff       \tcall   564 <xtime>\n     a9c:\t0f b6 c0             \tmovzbl %al,%eax\n     a9f:\t89 c7                \tmov    %eax,%edi\n     aa1:\te8 be fa ff ff       \tcall   564 <xtime>\n     aa6:\t0f b6 c0             \tmovzbl %al,%eax\n     aa9:\t89 c7                \tmov    %eax,%edi\n     aab:\te8 b4 fa ff ff       \tcall   564 <xtime>\n     ab0:\t32 45 e8             \txor    -0x18(%rbp),%al\n     ab3:\t41 89 c4             \tmov    %eax,%r12d\n     ab6:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     aba:\t89 c7                \tmov    %eax,%edi\n     abc:\te8 a3 fa ff ff       \tcall   564 <xtime>\n     ac1:\t89 c3                \tmov    %eax,%ebx\n     ac3:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     ac7:\t89 c7                \tmov    %eax,%edi\n     ac9:\te8 96 fa ff ff       \tcall   564 <xtime>\n     ace:\t0f b6 c0             \tmovzbl %al,%eax\n     ad1:\t89 c7                \tmov    %eax,%edi\n     ad3:\te8 8c fa ff ff       \tcall   564 <xtime>\n     ad8:\t31 c3                \txor    %eax,%ebx\n     ada:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     ade:\t89 c7                \tmov    %eax,%edi\n     ae0:\te8 7f fa ff ff       \tcall   564 <xtime>\n     ae5:\t0f b6 c0             \tmovzbl %al,%eax\n     ae8:\t89 c7                \tmov    %eax,%edi\n     aea:\te8 75 fa ff ff       \tcall   564 <xtime>\n     aef:\t0f b6 c0             \tmovzbl %al,%eax\n     af2:\t89 c7                \tmov    %eax,%edi\n     af4:\te8 6b fa ff ff       \tcall   564 <xtime>\n     af9:\t31 d8                \txor    %ebx,%eax\n     afb:\t41 31 c4             \txor    %eax,%r12d\n     afe:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     b02:\t89 c7                \tmov    %eax,%edi\n     b04:\te8 5b fa ff ff       \tcall   564 <xtime>\n     b09:\t32 45 ea             \txor    -0x16(%rbp),%al\n     b0c:\t89 c3                \tmov    %eax,%ebx\n     b0e:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     b12:\t89 c7                \tmov    %eax,%edi\n     b14:\te8 4b fa ff ff       \tcall   564 <xtime>\n     b19:\t0f b6 c0             \tmovzbl %al,%eax\n     b1c:\t89 c7                \tmov    %eax,%edi\n     b1e:\te8 41 fa ff ff       \tcall   564 <xtime>\n     b23:\t0f b6 c0             \tmovzbl %al,%eax\n     b26:\t89 c7                \tmov    %eax,%edi\n     b28:\te8 37 fa ff ff       \tcall   564 <xtime>\n     b2d:\t31 d8                \txor    %ebx,%eax\n     b2f:\t41 31 c4             \txor    %eax,%r12d\n     b32:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     b36:\t89 c7                \tmov    %eax,%edi\n     b38:\te8 27 fa ff ff       \tcall   564 <xtime>\n     b3d:\t0f b6 c0             \tmovzbl %al,%eax\n     b40:\t89 c7                \tmov    %eax,%edi\n     b42:\te8 1d fa ff ff       \tcall   564 <xtime>\n     b47:\t32 45 eb             \txor    -0x15(%rbp),%al\n     b4a:\t89 c3                \tmov    %eax,%ebx\n     b4c:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     b50:\t89 c7                \tmov    %eax,%edi\n     b52:\te8 0d fa ff ff       \tcall   564 <xtime>\n     b57:\t0f b6 c0             \tmovzbl %al,%eax\n     b5a:\t89 c7                \tmov    %eax,%edi\n     b5c:\te8 03 fa ff ff       \tcall   564 <xtime>\n     b61:\t0f b6 c0             \tmovzbl %al,%eax\n     b64:\t89 c7                \tmov    %eax,%edi\n     b66:\te8 f9 f9 ff ff       \tcall   564 <xtime>\n     b6b:\t31 d8                \txor    %ebx,%eax\n     b6d:\t44 89 e1             \tmov    %r12d,%ecx\n     b70:\t31 c1                \txor    %eax,%ecx\n     b72:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     b76:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     b79:\t48 63 d2             \tmovslq %edx,%rdx\n     b7c:\t88 4c 90 01          \tmov    %cl,0x1(%rax,%rdx,4)\n     b80:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     b84:\t89 c7                \tmov    %eax,%edi\n     b86:\te8 d9 f9 ff ff       \tcall   564 <xtime>\n     b8b:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     b8f:\t89 c7                \tmov    %eax,%edi\n     b91:\te8 ce f9 ff ff       \tcall   564 <xtime>\n     b96:\t0f b6 c0             \tmovzbl %al,%eax\n     b99:\t89 c7                \tmov    %eax,%edi\n     b9b:\te8 c4 f9 ff ff       \tcall   564 <xtime>\n     ba0:\t0f b6 c0             \tmovzbl %al,%eax\n     ba3:\t89 c7                \tmov    %eax,%edi\n     ba5:\te8 ba f9 ff ff       \tcall   564 <xtime>\n     baa:\t0f b6 c0             \tmovzbl %al,%eax\n     bad:\t89 c7                \tmov    %eax,%edi\n     baf:\te8 b0 f9 ff ff       \tcall   564 <xtime>\n     bb4:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     bb8:\t89 c7                \tmov    %eax,%edi\n     bba:\te8 a5 f9 ff ff       \tcall   564 <xtime>\n     bbf:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     bc3:\t89 c7                \tmov    %eax,%edi\n     bc5:\te8 9a f9 ff ff       \tcall   564 <xtime>\n     bca:\t0f b6 c0             \tmovzbl %al,%eax\n     bcd:\t89 c7                \tmov    %eax,%edi\n     bcf:\te8 90 f9 ff ff       \tcall   564 <xtime>\n     bd4:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     bd8:\t89 c7                \tmov    %eax,%edi\n     bda:\te8 85 f9 ff ff       \tcall   564 <xtime>\n     bdf:\t0f b6 c0             \tmovzbl %al,%eax\n     be2:\t89 c7                \tmov    %eax,%edi\n     be4:\te8 7b f9 ff ff       \tcall   564 <xtime>\n     be9:\t0f b6 c0             \tmovzbl %al,%eax\n     bec:\t89 c7                \tmov    %eax,%edi\n     bee:\te8 71 f9 ff ff       \tcall   564 <xtime>\n     bf3:\t0f b6 c0             \tmovzbl %al,%eax\n     bf6:\t89 c7                \tmov    %eax,%edi\n     bf8:\te8 67 f9 ff ff       \tcall   564 <xtime>\n     bfd:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     c01:\t89 c7                \tmov    %eax,%edi\n     c03:\te8 5c f9 ff ff       \tcall   564 <xtime>\n     c08:\t0f b6 c0             \tmovzbl %al,%eax\n     c0b:\t89 c7                \tmov    %eax,%edi\n     c0d:\te8 52 f9 ff ff       \tcall   564 <xtime>\n     c12:\t0f b6 c0             \tmovzbl %al,%eax\n     c15:\t89 c7                \tmov    %eax,%edi\n     c17:\te8 48 f9 ff ff       \tcall   564 <xtime>\n     c1c:\t0f b6 c0             \tmovzbl %al,%eax\n     c1f:\t89 c7                \tmov    %eax,%edi\n     c21:\te8 3e f9 ff ff       \tcall   564 <xtime>\n     c26:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     c2a:\t89 c7                \tmov    %eax,%edi\n     c2c:\te8 33 f9 ff ff       \tcall   564 <xtime>\n     c31:\t0f b6 c0             \tmovzbl %al,%eax\n     c34:\t89 c7                \tmov    %eax,%edi\n     c36:\te8 29 f9 ff ff       \tcall   564 <xtime>\n     c3b:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     c3f:\t89 c7                \tmov    %eax,%edi\n     c41:\te8 1e f9 ff ff       \tcall   564 <xtime>\n     c46:\t0f b6 c0             \tmovzbl %al,%eax\n     c49:\t89 c7                \tmov    %eax,%edi\n     c4b:\te8 14 f9 ff ff       \tcall   564 <xtime>\n     c50:\t0f b6 c0             \tmovzbl %al,%eax\n     c53:\t89 c7                \tmov    %eax,%edi\n     c55:\te8 0a f9 ff ff       \tcall   564 <xtime>\n     c5a:\t0f b6 c0             \tmovzbl %al,%eax\n     c5d:\t89 c7                \tmov    %eax,%edi\n     c5f:\te8 00 f9 ff ff       \tcall   564 <xtime>\n     c64:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     c68:\t89 c7                \tmov    %eax,%edi\n     c6a:\te8 f5 f8 ff ff       \tcall   564 <xtime>\n     c6f:\t0f b6 c0             \tmovzbl %al,%eax\n     c72:\t89 c7                \tmov    %eax,%edi\n     c74:\te8 eb f8 ff ff       \tcall   564 <xtime>\n     c79:\t32 45 e8             \txor    -0x18(%rbp),%al\n     c7c:\t89 c3                \tmov    %eax,%ebx\n     c7e:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     c82:\t89 c7                \tmov    %eax,%edi\n     c84:\te8 db f8 ff ff       \tcall   564 <xtime>\n     c89:\t0f b6 c0             \tmovzbl %al,%eax\n     c8c:\t89 c7                \tmov    %eax,%edi\n     c8e:\te8 d1 f8 ff ff       \tcall   564 <xtime>\n     c93:\t0f b6 c0             \tmovzbl %al,%eax\n     c96:\t89 c7                \tmov    %eax,%edi\n     c98:\te8 c7 f8 ff ff       \tcall   564 <xtime>\n     c9d:\t31 c3                \txor    %eax,%ebx\n     c9f:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     ca3:\t89 c7                \tmov    %eax,%edi\n     ca5:\te8 ba f8 ff ff       \tcall   564 <xtime>\n     caa:\t0f b6 c0             \tmovzbl %al,%eax\n     cad:\t89 c7                \tmov    %eax,%edi\n     caf:\te8 b0 f8 ff ff       \tcall   564 <xtime>\n     cb4:\t0f b6 c0             \tmovzbl %al,%eax\n     cb7:\t89 c7                \tmov    %eax,%edi\n     cb9:\te8 a6 f8 ff ff       \tcall   564 <xtime>\n     cbe:\t32 45 e9             \txor    -0x17(%rbp),%al\n     cc1:\t31 c3                \txor    %eax,%ebx\n     cc3:\t41 89 dc             \tmov    %ebx,%r12d\n     cc6:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     cca:\t89 c7                \tmov    %eax,%edi\n     ccc:\te8 93 f8 ff ff       \tcall   564 <xtime>\n     cd1:\t89 c3                \tmov    %eax,%ebx\n     cd3:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     cd7:\t89 c7                \tmov    %eax,%edi\n     cd9:\te8 86 f8 ff ff       \tcall   564 <xtime>\n     cde:\t0f b6 c0             \tmovzbl %al,%eax\n     ce1:\t89 c7                \tmov    %eax,%edi\n     ce3:\te8 7c f8 ff ff       \tcall   564 <xtime>\n     ce8:\t31 c3                \txor    %eax,%ebx\n     cea:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     cee:\t89 c7                \tmov    %eax,%edi\n     cf0:\te8 6f f8 ff ff       \tcall   564 <xtime>\n     cf5:\t0f b6 c0             \tmovzbl %al,%eax\n     cf8:\t89 c7                \tmov    %eax,%edi\n     cfa:\te8 65 f8 ff ff       \tcall   564 <xtime>\n     cff:\t0f b6 c0             \tmovzbl %al,%eax\n     d02:\t89 c7                \tmov    %eax,%edi\n     d04:\te8 5b f8 ff ff       \tcall   564 <xtime>\n     d09:\t31 d8                \txor    %ebx,%eax\n     d0b:\t41 31 c4             \txor    %eax,%r12d\n     d0e:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     d12:\t89 c7                \tmov    %eax,%edi\n     d14:\te8 4b f8 ff ff       \tcall   564 <xtime>\n     d19:\t32 45 eb             \txor    -0x15(%rbp),%al\n     d1c:\t89 c3                \tmov    %eax,%ebx\n     d1e:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     d22:\t89 c7                \tmov    %eax,%edi\n     d24:\te8 3b f8 ff ff       \tcall   564 <xtime>\n     d29:\t0f b6 c0             \tmovzbl %al,%eax\n     d2c:\t89 c7                \tmov    %eax,%edi\n     d2e:\te8 31 f8 ff ff       \tcall   564 <xtime>\n     d33:\t0f b6 c0             \tmovzbl %al,%eax\n     d36:\t89 c7                \tmov    %eax,%edi\n     d38:\te8 27 f8 ff ff       \tcall   564 <xtime>\n     d3d:\t31 d8                \txor    %ebx,%eax\n     d3f:\t44 89 e1             \tmov    %r12d,%ecx\n     d42:\t31 c1                \txor    %eax,%ecx\n     d44:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     d48:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     d4b:\t48 63 d2             \tmovslq %edx,%rdx\n     d4e:\t88 4c 90 02          \tmov    %cl,0x2(%rax,%rdx,4)\n     d52:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     d56:\t89 c7                \tmov    %eax,%edi\n     d58:\te8 07 f8 ff ff       \tcall   564 <xtime>\n     d5d:\t0f b6 c0             \tmovzbl %al,%eax\n     d60:\t89 c7                \tmov    %eax,%edi\n     d62:\te8 fd f7 ff ff       \tcall   564 <xtime>\n     d67:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     d6b:\t89 c7                \tmov    %eax,%edi\n     d6d:\te8 f2 f7 ff ff       \tcall   564 <xtime>\n     d72:\t0f b6 c0             \tmovzbl %al,%eax\n     d75:\t89 c7                \tmov    %eax,%edi\n     d77:\te8 e8 f7 ff ff       \tcall   564 <xtime>\n     d7c:\t0f b6 c0             \tmovzbl %al,%eax\n     d7f:\t89 c7                \tmov    %eax,%edi\n     d81:\te8 de f7 ff ff       \tcall   564 <xtime>\n     d86:\t0f b6 c0             \tmovzbl %al,%eax\n     d89:\t89 c7                \tmov    %eax,%edi\n     d8b:\te8 d4 f7 ff ff       \tcall   564 <xtime>\n     d90:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     d94:\t89 c7                \tmov    %eax,%edi\n     d96:\te8 c9 f7 ff ff       \tcall   564 <xtime>\n     d9b:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     d9f:\t89 c7                \tmov    %eax,%edi\n     da1:\te8 be f7 ff ff       \tcall   564 <xtime>\n     da6:\t0f b6 c0             \tmovzbl %al,%eax\n     da9:\t89 c7                \tmov    %eax,%edi\n     dab:\te8 b4 f7 ff ff       \tcall   564 <xtime>\n     db0:\t0f b6 c0             \tmovzbl %al,%eax\n     db3:\t89 c7                \tmov    %eax,%edi\n     db5:\te8 aa f7 ff ff       \tcall   564 <xtime>\n     dba:\t0f b6 c0             \tmovzbl %al,%eax\n     dbd:\t89 c7                \tmov    %eax,%edi\n     dbf:\te8 a0 f7 ff ff       \tcall   564 <xtime>\n     dc4:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     dc8:\t89 c7                \tmov    %eax,%edi\n     dca:\te8 95 f7 ff ff       \tcall   564 <xtime>\n     dcf:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     dd3:\t89 c7                \tmov    %eax,%edi\n     dd5:\te8 8a f7 ff ff       \tcall   564 <xtime>\n     dda:\t0f b6 c0             \tmovzbl %al,%eax\n     ddd:\t89 c7                \tmov    %eax,%edi\n     ddf:\te8 80 f7 ff ff       \tcall   564 <xtime>\n     de4:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     de8:\t89 c7                \tmov    %eax,%edi\n     dea:\te8 75 f7 ff ff       \tcall   564 <xtime>\n     def:\t0f b6 c0             \tmovzbl %al,%eax\n     df2:\t89 c7                \tmov    %eax,%edi\n     df4:\te8 6b f7 ff ff       \tcall   564 <xtime>\n     df9:\t0f b6 c0             \tmovzbl %al,%eax\n     dfc:\t89 c7                \tmov    %eax,%edi\n     dfe:\te8 61 f7 ff ff       \tcall   564 <xtime>\n     e03:\t0f b6 c0             \tmovzbl %al,%eax\n     e06:\t89 c7                \tmov    %eax,%edi\n     e08:\te8 57 f7 ff ff       \tcall   564 <xtime>\n     e0d:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     e11:\t89 c7                \tmov    %eax,%edi\n     e13:\te8 4c f7 ff ff       \tcall   564 <xtime>\n     e18:\t0f b6 c0             \tmovzbl %al,%eax\n     e1b:\t89 c7                \tmov    %eax,%edi\n     e1d:\te8 42 f7 ff ff       \tcall   564 <xtime>\n     e22:\t0f b6 c0             \tmovzbl %al,%eax\n     e25:\t89 c7                \tmov    %eax,%edi\n     e27:\te8 38 f7 ff ff       \tcall   564 <xtime>\n     e2c:\t0f b6 c0             \tmovzbl %al,%eax\n     e2f:\t89 c7                \tmov    %eax,%edi\n     e31:\te8 2e f7 ff ff       \tcall   564 <xtime>\n     e36:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     e3a:\t89 c7                \tmov    %eax,%edi\n     e3c:\te8 23 f7 ff ff       \tcall   564 <xtime>\n     e41:\t32 45 e8             \txor    -0x18(%rbp),%al\n     e44:\t89 c3                \tmov    %eax,%ebx\n     e46:\t0f b6 45 e8          \tmovzbl -0x18(%rbp),%eax\n     e4a:\t89 c7                \tmov    %eax,%edi\n     e4c:\te8 13 f7 ff ff       \tcall   564 <xtime>\n     e51:\t0f b6 c0             \tmovzbl %al,%eax\n     e54:\t89 c7                \tmov    %eax,%edi\n     e56:\te8 09 f7 ff ff       \tcall   564 <xtime>\n     e5b:\t0f b6 c0             \tmovzbl %al,%eax\n     e5e:\t89 c7                \tmov    %eax,%edi\n     e60:\te8 ff f6 ff ff       \tcall   564 <xtime>\n     e65:\t31 c3                \txor    %eax,%ebx\n     e67:\t41 89 dc             \tmov    %ebx,%r12d\n     e6a:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     e6e:\t89 c7                \tmov    %eax,%edi\n     e70:\te8 ef f6 ff ff       \tcall   564 <xtime>\n     e75:\t0f b6 c0             \tmovzbl %al,%eax\n     e78:\t89 c7                \tmov    %eax,%edi\n     e7a:\te8 e5 f6 ff ff       \tcall   564 <xtime>\n     e7f:\t32 45 e9             \txor    -0x17(%rbp),%al\n     e82:\t89 c3                \tmov    %eax,%ebx\n     e84:\t0f b6 45 e9          \tmovzbl -0x17(%rbp),%eax\n     e88:\t89 c7                \tmov    %eax,%edi\n     e8a:\te8 d5 f6 ff ff       \tcall   564 <xtime>\n     e8f:\t0f b6 c0             \tmovzbl %al,%eax\n     e92:\t89 c7                \tmov    %eax,%edi\n     e94:\te8 cb f6 ff ff       \tcall   564 <xtime>\n     e99:\t0f b6 c0             \tmovzbl %al,%eax\n     e9c:\t89 c7                \tmov    %eax,%edi\n     e9e:\te8 c1 f6 ff ff       \tcall   564 <xtime>\n     ea3:\t31 d8                \txor    %ebx,%eax\n     ea5:\t44 89 e3             \tmov    %r12d,%ebx\n     ea8:\t31 c3                \txor    %eax,%ebx\n     eaa:\t0f b6 45 ea          \tmovzbl -0x16(%rbp),%eax\n     eae:\t89 c7                \tmov    %eax,%edi\n     eb0:\te8 af f6 ff ff       \tcall   564 <xtime>\n     eb5:\t0f b6 c0             \tmovzbl %al,%eax\n     eb8:\t89 c7                \tmov    %eax,%edi\n     eba:\te8 a5 f6 ff ff       \tcall   564 <xtime>\n     ebf:\t0f b6 c0             \tmovzbl %al,%eax\n     ec2:\t89 c7                \tmov    %eax,%edi\n     ec4:\te8 9b f6 ff ff       \tcall   564 <xtime>\n     ec9:\t32 45 ea             \txor    -0x16(%rbp),%al\n     ecc:\t31 c3                \txor    %eax,%ebx\n     ece:\t41 89 dc             \tmov    %ebx,%r12d\n     ed1:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     ed5:\t89 c7                \tmov    %eax,%edi\n     ed7:\te8 88 f6 ff ff       \tcall   564 <xtime>\n     edc:\t89 c3                \tmov    %eax,%ebx\n     ede:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     ee2:\t89 c7                \tmov    %eax,%edi\n     ee4:\te8 7b f6 ff ff       \tcall   564 <xtime>\n     ee9:\t0f b6 c0             \tmovzbl %al,%eax\n     eec:\t89 c7                \tmov    %eax,%edi\n     eee:\te8 71 f6 ff ff       \tcall   564 <xtime>\n     ef3:\t31 c3                \txor    %eax,%ebx\n     ef5:\t0f b6 45 eb          \tmovzbl -0x15(%rbp),%eax\n     ef9:\t89 c7                \tmov    %eax,%edi\n     efb:\te8 64 f6 ff ff       \tcall   564 <xtime>\n     f00:\t0f b6 c0             \tmovzbl %al,%eax\n     f03:\t89 c7                \tmov    %eax,%edi\n     f05:\te8 5a f6 ff ff       \tcall   564 <xtime>\n     f0a:\t0f b6 c0             \tmovzbl %al,%eax\n     f0d:\t89 c7                \tmov    %eax,%edi\n     f0f:\te8 50 f6 ff ff       \tcall   564 <xtime>\n     f14:\t31 d8                \txor    %ebx,%eax\n     f16:\t44 89 e1             \tmov    %r12d,%ecx\n     f19:\t31 c1                \txor    %eax,%ecx\n     f1b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     f1f:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     f22:\t48 63 d2             \tmovslq %edx,%rdx\n     f25:\t88 4c 90 03          \tmov    %cl,0x3(%rax,%rdx,4)\n     f29:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n     f2d:\t83 7d ec 03          \tcmpl   $0x3,-0x14(%rbp)\n     f31:\t0f 8e 5c f8 ff ff    \tjle    793 <InvMixColumns+0x1f>\n     f37:\t90                   \tnop\n     f38:\t90                   \tnop\n     f39:\t48 83 c4 18          \tadd    $0x18,%rsp\n     f3d:\t5b                   \tpop    %rbx\n     f3e:\t41 5c                \tpop    %r12\n     f40:\t5d                   \tpop    %rbp\n     f41:\tc3                   \tret    \n\n0000000000000f42 <InvSubBytes>:\n     f42:\tf3 0f 1e fa          \tendbr64 \n     f46:\t55                   \tpush   %rbp\n     f47:\t48 89 e5             \tmov    %rsp,%rbp\n     f4a:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     f4e:\tc6 45 fe 00          \tmovb   $0x0,-0x2(%rbp)\n     f52:\teb 60                \tjmp    fb4 <InvSubBytes+0x72>\n     f54:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n     f58:\teb 50                \tjmp    faa <InvSubBytes+0x68>\n     f5a:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     f5e:\t0f b6 55 fe          \tmovzbl -0x2(%rbp),%edx\n     f62:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n     f66:\t48 63 d2             \tmovslq %edx,%rdx\n     f69:\t48 98                \tcltq   \n     f6b:\t48 c1 e0 02          \tshl    $0x2,%rax\n     f6f:\t48 01 c8             \tadd    %rcx,%rax\n     f72:\t48 01 d0             \tadd    %rdx,%rax\n     f75:\t0f b6 00             \tmovzbl (%rax),%eax\n     f78:\t0f b6 c0             \tmovzbl %al,%eax\n     f7b:\t0f b6 4d ff          \tmovzbl -0x1(%rbp),%ecx\n     f7f:\t0f b6 75 fe          \tmovzbl -0x2(%rbp),%esi\n     f83:\t48 98                \tcltq   \n     f85:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # f8c <InvSubBytes+0x4a>\n     f8c:\t0f b6 14 10          \tmovzbl (%rax,%rdx,1),%edx\n     f90:\t48 8b 7d e8          \tmov    -0x18(%rbp),%rdi\n     f94:\t48 63 f6             \tmovslq %esi,%rsi\n     f97:\t48 63 c1             \tmovslq %ecx,%rax\n     f9a:\t48 c1 e0 02          \tshl    $0x2,%rax\n     f9e:\t48 01 f8             \tadd    %rdi,%rax\n     fa1:\t48 01 f0             \tadd    %rsi,%rax\n     fa4:\t88 10                \tmov    %dl,(%rax)\n     fa6:\t80 45 ff 01          \taddb   $0x1,-0x1(%rbp)\n     faa:\t80 7d ff 03          \tcmpb   $0x3,-0x1(%rbp)\n     fae:\t76 aa                \tjbe    f5a <InvSubBytes+0x18>\n     fb0:\t80 45 fe 01          \taddb   $0x1,-0x2(%rbp)\n     fb4:\t80 7d fe 03          \tcmpb   $0x3,-0x2(%rbp)\n     fb8:\t76 9a                \tjbe    f54 <InvSubBytes+0x12>\n     fba:\t90                   \tnop\n     fbb:\t90                   \tnop\n     fbc:\t5d                   \tpop    %rbp\n     fbd:\tc3                   \tret    \n\n0000000000000fbe <InvShiftRows>:\n     fbe:\tf3 0f 1e fa          \tendbr64 \n     fc2:\t55                   \tpush   %rbp\n     fc3:\t48 89 e5             \tmov    %rsp,%rbp\n     fc6:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     fca:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fce:\t0f b6 40 0d          \tmovzbl 0xd(%rax),%eax\n     fd2:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     fd5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fd9:\t0f b6 50 09          \tmovzbl 0x9(%rax),%edx\n     fdd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fe1:\t88 50 0d             \tmov    %dl,0xd(%rax)\n     fe4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fe8:\t0f b6 50 05          \tmovzbl 0x5(%rax),%edx\n     fec:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     ff0:\t88 50 09             \tmov    %dl,0x9(%rax)\n     ff3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     ff7:\t0f b6 50 01          \tmovzbl 0x1(%rax),%edx\n     ffb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fff:\t88 50 05             \tmov    %dl,0x5(%rax)\n    1002:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1006:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n    100a:\t88 50 01             \tmov    %dl,0x1(%rax)\n    100d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1011:\t0f b6 40 02          \tmovzbl 0x2(%rax),%eax\n    1015:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n    1018:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    101c:\t0f b6 50 0a          \tmovzbl 0xa(%rax),%edx\n    1020:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1024:\t88 50 02             \tmov    %dl,0x2(%rax)\n    1027:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    102b:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n    102f:\t88 50 0a             \tmov    %dl,0xa(%rax)\n    1032:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1036:\t0f b6 40 06          \tmovzbl 0x6(%rax),%eax\n    103a:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n    103d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1041:\t0f b6 50 0e          \tmovzbl 0xe(%rax),%edx\n    1045:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1049:\t88 50 06             \tmov    %dl,0x6(%rax)\n    104c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1050:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n    1054:\t88 50 0e             \tmov    %dl,0xe(%rax)\n    1057:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    105b:\t0f b6 40 03          \tmovzbl 0x3(%rax),%eax\n    105f:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n    1062:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1066:\t0f b6 50 07          \tmovzbl 0x7(%rax),%edx\n    106a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    106e:\t88 50 03             \tmov    %dl,0x3(%rax)\n    1071:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1075:\t0f b6 50 0b          \tmovzbl 0xb(%rax),%edx\n    1079:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    107d:\t88 50 07             \tmov    %dl,0x7(%rax)\n    1080:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1084:\t0f b6 50 0f          \tmovzbl 0xf(%rax),%edx\n    1088:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    108c:\t88 50 0b             \tmov    %dl,0xb(%rax)\n    108f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1093:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n    1097:\t88 50 0f             \tmov    %dl,0xf(%rax)\n    109a:\t90                   \tnop\n    109b:\t5d                   \tpop    %rbp\n    109c:\tc3                   \tret    \n\n000000000000109d <Cipher>:\n    109d:\tf3 0f 1e fa          \tendbr64 \n    10a1:\t55                   \tpush   %rbp\n    10a2:\t48 89 e5             \tmov    %rsp,%rbp\n    10a5:\t48 83 ec 20          \tsub    $0x20,%rsp\n    10a9:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    10ad:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    10b1:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n    10b5:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    10b9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    10bd:\t48 89 c6             \tmov    %rax,%rsi\n    10c0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    10c5:\te8 9a f2 ff ff       \tcall   364 <AddRoundKey>\n    10ca:\tc6 45 ff 01          \tmovb   $0x1,-0x1(%rbp)\n    10ce:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    10d2:\t48 89 c7             \tmov    %rax,%rdi\n    10d5:\te8 2f f3 ff ff       \tcall   409 <SubBytes>\n    10da:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    10de:\t48 89 c7             \tmov    %rax,%rdi\n    10e1:\te8 9f f3 ff ff       \tcall   485 <ShiftRows>\n    10e6:\t80 7d ff 0a          \tcmpb   $0xa,-0x1(%rbp)\n    10ea:\t74 28                \tje     1114 <Cipher+0x77>\n    10ec:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    10f0:\t48 89 c7             \tmov    %rax,%rdi\n    10f3:\te8 9d f4 ff ff       \tcall   595 <MixColumns>\n    10f8:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n    10fc:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1100:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n    1104:\t48 89 ce             \tmov    %rcx,%rsi\n    1107:\t89 c7                \tmov    %eax,%edi\n    1109:\te8 56 f2 ff ff       \tcall   364 <AddRoundKey>\n    110e:\t80 45 ff 01          \taddb   $0x1,-0x1(%rbp)\n    1112:\teb ba                \tjmp    10ce <Cipher+0x31>\n    1114:\t90                   \tnop\n    1115:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1119:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    111d:\t48 89 c6             \tmov    %rax,%rsi\n    1120:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n    1125:\te8 3a f2 ff ff       \tcall   364 <AddRoundKey>\n    112a:\t90                   \tnop\n    112b:\tc9                   \tleave  \n    112c:\tc3                   \tret    \n\n000000000000112d <InvCipher>:\n    112d:\tf3 0f 1e fa          \tendbr64 \n    1131:\t55                   \tpush   %rbp\n    1132:\t48 89 e5             \tmov    %rsp,%rbp\n    1135:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1139:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    113d:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    1141:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n    1145:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1149:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    114d:\t48 89 c6             \tmov    %rax,%rsi\n    1150:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n    1155:\te8 0a f2 ff ff       \tcall   364 <AddRoundKey>\n    115a:\tc6 45 ff 09          \tmovb   $0x9,-0x1(%rbp)\n    115e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1162:\t48 89 c7             \tmov    %rax,%rdi\n    1165:\te8 54 fe ff ff       \tcall   fbe <InvShiftRows>\n    116a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    116e:\t48 89 c7             \tmov    %rax,%rdi\n    1171:\te8 cc fd ff ff       \tcall   f42 <InvSubBytes>\n    1176:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n    117a:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    117e:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n    1182:\t48 89 ce             \tmov    %rcx,%rsi\n    1185:\t89 c7                \tmov    %eax,%edi\n    1187:\te8 d8 f1 ff ff       \tcall   364 <AddRoundKey>\n    118c:\t80 7d ff 00          \tcmpb   $0x0,-0x1(%rbp)\n    1190:\t74 12                \tje     11a4 <InvCipher+0x77>\n    1192:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1196:\t48 89 c7             \tmov    %rax,%rdi\n    1199:\te8 d6 f5 ff ff       \tcall   774 <InvMixColumns>\n    119e:\t80 6d ff 01          \tsubb   $0x1,-0x1(%rbp)\n    11a2:\teb ba                \tjmp    115e <InvCipher+0x31>\n    11a4:\t90                   \tnop\n    11a5:\t90                   \tnop\n    11a6:\tc9                   \tleave  \n    11a7:\tc3                   \tret    \n\n00000000000011a8 <AES_ECB_encrypt>:\n    11a8:\tf3 0f 1e fa          \tendbr64 \n    11ac:\t55                   \tpush   %rbp\n    11ad:\t48 89 e5             \tmov    %rsp,%rbp\n    11b0:\t48 83 ec 10          \tsub    $0x10,%rsp\n    11b4:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    11b8:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    11bc:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    11c0:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    11c4:\t48 89 d6             \tmov    %rdx,%rsi\n    11c7:\t48 89 c7             \tmov    %rax,%rdi\n    11ca:\te8 ce fe ff ff       \tcall   109d <Cipher>\n    11cf:\t90                   \tnop\n    11d0:\tc9                   \tleave  \n    11d1:\tc3                   \tret    \n\n00000000000011d2 <AES_ECB_decrypt>:\n    11d2:\tf3 0f 1e fa          \tendbr64 \n    11d6:\t55                   \tpush   %rbp\n    11d7:\t48 89 e5             \tmov    %rsp,%rbp\n    11da:\t48 83 ec 10          \tsub    $0x10,%rsp\n    11de:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    11e2:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    11e6:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    11ea:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    11ee:\t48 89 d6             \tmov    %rdx,%rsi\n    11f1:\t48 89 c7             \tmov    %rax,%rdi\n    11f4:\te8 34 ff ff ff       \tcall   112d <InvCipher>\n    11f9:\t90                   \tnop\n    11fa:\tc9                   \tleave  \n    11fb:\tc3                   \tret    \n\n00000000000011fc <XorWithIv>:\n    11fc:\tf3 0f 1e fa          \tendbr64 \n    1200:\t55                   \tpush   %rbp\n    1201:\t48 89 e5             \tmov    %rsp,%rbp\n    1204:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    1208:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    120c:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n    1210:\teb 2f                \tjmp    1241 <XorWithIv+0x45>\n    1212:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n    1216:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    121a:\t48 01 d0             \tadd    %rdx,%rax\n    121d:\t0f b6 08             \tmovzbl (%rax),%ecx\n    1220:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n    1224:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1228:\t48 01 d0             \tadd    %rdx,%rax\n    122b:\t0f b6 10             \tmovzbl (%rax),%edx\n    122e:\t0f b6 75 ff          \tmovzbl -0x1(%rbp),%esi\n    1232:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1236:\t48 01 f0             \tadd    %rsi,%rax\n    1239:\t31 ca                \txor    %ecx,%edx\n    123b:\t88 10                \tmov    %dl,(%rax)\n    123d:\t80 45 ff 01          \taddb   $0x1,-0x1(%rbp)\n    1241:\t80 7d ff 0f          \tcmpb   $0xf,-0x1(%rbp)\n    1245:\t76 cb                \tjbe    1212 <XorWithIv+0x16>\n    1247:\t90                   \tnop\n    1248:\t90                   \tnop\n    1249:\t5d                   \tpop    %rbp\n    124a:\tc3                   \tret    \n\n000000000000124b <AES_CBC_encrypt_buffer>:\n    124b:\tf3 0f 1e fa          \tendbr64 \n    124f:\t55                   \tpush   %rbp\n    1250:\t48 89 e5             \tmov    %rsp,%rbp\n    1253:\t48 83 ec 28          \tsub    $0x28,%rsp\n    1257:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    125b:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    125f:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    1263:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1267:\t48 05 b0 00 00 00    \tadd    $0xb0,%rax\n    126d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1271:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    1278:\t00 \n    1279:\teb 38                \tjmp    12b3 <AES_CBC_encrypt_buffer+0x68>\n    127b:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    127f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1283:\t48 89 d6             \tmov    %rdx,%rsi\n    1286:\t48 89 c7             \tmov    %rax,%rdi\n    1289:\te8 6e ff ff ff       \tcall   11fc <XorWithIv>\n    128e:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1292:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1296:\t48 89 d6             \tmov    %rdx,%rsi\n    1299:\t48 89 c7             \tmov    %rax,%rdi\n    129c:\te8 fc fd ff ff       \tcall   109d <Cipher>\n    12a1:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    12a5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    12a9:\t48 83 45 e0 10       \taddq   $0x10,-0x20(%rbp)\n    12ae:\t48 83 45 f0 10       \taddq   $0x10,-0x10(%rbp)\n    12b3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    12b7:\t48 3b 45 d8          \tcmp    -0x28(%rbp),%rax\n    12bb:\t72 be                \tjb     127b <AES_CBC_encrypt_buffer+0x30>\n    12bd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    12c1:\t48 8d 88 b0 00 00 00 \tlea    0xb0(%rax),%rcx\n    12c8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    12cc:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    12d0:\t48 8b 00             \tmov    (%rax),%rax\n    12d3:\t48 89 01             \tmov    %rax,(%rcx)\n    12d6:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n    12da:\t90                   \tnop\n    12db:\tc9                   \tleave  \n    12dc:\tc3                   \tret    \n\n00000000000012dd <AES_CBC_decrypt_buffer>:\n    12dd:\tf3 0f 1e fa          \tendbr64 \n    12e1:\t55                   \tpush   %rbp\n    12e2:\t48 89 e5             \tmov    %rsp,%rbp\n    12e5:\t48 83 ec 50          \tsub    $0x50,%rsp\n    12e9:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    12ed:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    12f1:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    12f5:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    12fc:\t00 00 \n    12fe:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1302:\t31 c0                \txor    %eax,%eax\n    1304:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    130b:\t00 \n    130c:\teb 64                \tjmp    1372 <AES_CBC_decrypt_buffer+0x95>\n    130e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1312:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    1316:\t48 8b 00             \tmov    (%rax),%rax\n    1319:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    131d:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    1321:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1325:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1329:\t48 89 d6             \tmov    %rdx,%rsi\n    132c:\t48 89 c7             \tmov    %rax,%rdi\n    132f:\te8 f9 fd ff ff       \tcall   112d <InvCipher>\n    1334:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1338:\t48 8d 90 b0 00 00 00 \tlea    0xb0(%rax),%rdx\n    133f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1343:\t48 89 d6             \tmov    %rdx,%rsi\n    1346:\t48 89 c7             \tmov    %rax,%rdi\n    1349:\te8 ae fe ff ff       \tcall   11fc <XorWithIv>\n    134e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1352:\t48 8d 88 b0 00 00 00 \tlea    0xb0(%rax),%rcx\n    1359:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    135d:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1361:\t48 89 01             \tmov    %rax,(%rcx)\n    1364:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n    1368:\t48 83 45 c0 10       \taddq   $0x10,-0x40(%rbp)\n    136d:\t48 83 45 d8 10       \taddq   $0x10,-0x28(%rbp)\n    1372:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1376:\t48 3b 45 b8          \tcmp    -0x48(%rbp),%rax\n    137a:\t72 92                \tjb     130e <AES_CBC_decrypt_buffer+0x31>\n    137c:\t90                   \tnop\n    137d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1381:\t64 48 2b 04 25 28 00 \tsub    %fs:0x28,%rax\n    1388:\t00 00 \n    138a:\t74 05                \tje     1391 <AES_CBC_decrypt_buffer+0xb4>\n    138c:\te8 00 00 00 00       \tcall   1391 <AES_CBC_decrypt_buffer+0xb4>\n    1391:\tc9                   \tleave  \n    1392:\tc3                   \tret    \n\n0000000000001393 <AES_CTR_xcrypt_buffer>:\n    1393:\tf3 0f 1e fa          \tendbr64 \n    1397:\t55                   \tpush   %rbp\n    1398:\t48 89 e5             \tmov    %rsp,%rbp\n    139b:\t48 83 ec 50          \tsub    $0x50,%rsp\n    139f:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    13a3:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    13a7:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    13ab:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    13b2:\t00 00 \n    13b4:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    13b8:\t31 c0                \txor    %eax,%eax\n    13ba:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    13c1:\t00 \n    13c2:\tc7 45 d4 10 00 00 00 \tmovl   $0x10,-0x2c(%rbp)\n    13c9:\te9 ce 00 00 00       \tjmp    149c <AES_CTR_xcrypt_buffer+0x109>\n    13ce:\t83 7d d4 10          \tcmpl   $0x10,-0x2c(%rbp)\n    13d2:\t0f 85 94 00 00 00    \tjne    146c <AES_CTR_xcrypt_buffer+0xd9>\n    13d8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    13dc:\t48 05 b0 00 00 00    \tadd    $0xb0,%rax\n    13e2:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    13e6:\t48 8b 00             \tmov    (%rax),%rax\n    13e9:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    13ed:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    13f1:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    13f5:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    13f9:\t48 89 d6             \tmov    %rdx,%rsi\n    13fc:\t48 89 c7             \tmov    %rax,%rdi\n    13ff:\te8 99 fc ff ff       \tcall   109d <Cipher>\n    1404:\tc7 45 d4 0f 00 00 00 \tmovl   $0xf,-0x2c(%rbp)\n    140b:\teb 52                \tjmp    145f <AES_CTR_xcrypt_buffer+0xcc>\n    140d:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1411:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    1414:\t48 98                \tcltq   \n    1416:\t0f b6 84 02 b0 00 00 \tmovzbl 0xb0(%rdx,%rax,1),%eax\n    141d:\t00 \n    141e:\t3c ff                \tcmp    $0xff,%al\n    1420:\t75 13                \tjne    1435 <AES_CTR_xcrypt_buffer+0xa2>\n    1422:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1426:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    1429:\t48 98                \tcltq   \n    142b:\tc6 84 02 b0 00 00 00 \tmovb   $0x0,0xb0(%rdx,%rax,1)\n    1432:\t00 \n    1433:\teb 26                \tjmp    145b <AES_CTR_xcrypt_buffer+0xc8>\n    1435:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1439:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    143c:\t48 98                \tcltq   \n    143e:\t0f b6 84 02 b0 00 00 \tmovzbl 0xb0(%rdx,%rax,1),%eax\n    1445:\t00 \n    1446:\t8d 48 01             \tlea    0x1(%rax),%ecx\n    1449:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    144d:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    1450:\t48 98                \tcltq   \n    1452:\t88 8c 02 b0 00 00 00 \tmov    %cl,0xb0(%rdx,%rax,1)\n    1459:\teb 0a                \tjmp    1465 <AES_CTR_xcrypt_buffer+0xd2>\n    145b:\t83 6d d4 01          \tsubl   $0x1,-0x2c(%rbp)\n    145f:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n    1463:\t79 a8                \tjns    140d <AES_CTR_xcrypt_buffer+0x7a>\n    1465:\tc7 45 d4 00 00 00 00 \tmovl   $0x0,-0x2c(%rbp)\n    146c:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    1470:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1474:\t48 01 d0             \tadd    %rdx,%rax\n    1477:\t0f b6 08             \tmovzbl (%rax),%ecx\n    147a:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    147d:\t48 98                \tcltq   \n    147f:\t0f b6 54 05 e0       \tmovzbl -0x20(%rbp,%rax,1),%edx\n    1484:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    1488:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    148c:\t48 01 f0             \tadd    %rsi,%rax\n    148f:\t31 ca                \txor    %ecx,%edx\n    1491:\t88 10                \tmov    %dl,(%rax)\n    1493:\t48 83 45 d8 01       \taddq   $0x1,-0x28(%rbp)\n    1498:\t83 45 d4 01          \taddl   $0x1,-0x2c(%rbp)\n    149c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    14a0:\t48 3b 45 b8          \tcmp    -0x48(%rbp),%rax\n    14a4:\t0f 82 24 ff ff ff    \tjb     13ce <AES_CTR_xcrypt_buffer+0x3b>\n    14aa:\t90                   \tnop\n    14ab:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    14af:\t64 48 2b 04 25 28 00 \tsub    %fs:0x28,%rax\n    14b6:\t00 00 \n    14b8:\t74 05                \tje     14bf <AES_CTR_xcrypt_buffer+0x12c>\n    14ba:\te8 00 00 00 00       \tcall   14bf <AES_CTR_xcrypt_buffer+0x12c>\n    14bf:\tc9                   \tleave  \n    14c0:\tc3                   \tret    \n"
  },
  {
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdint.h>\n\n// Enable ECB, CTR and CBC mode. Note this can be done before including aes.h or at compile-time.\n// E.g. with GCC by using the -D flag: gcc -c aes.c -DCBC=0 -DCTR=1 -DECB=1\n#define CBC 1\n#define CTR 1\n#define ECB 1\n\n#include \"aes.h\"\n\n\nstatic void phex(uint8_t* str);\nstatic int test_encrypt_cbc(void);\nstatic int test_decrypt_cbc(void);\nstatic int test_encrypt_ctr(void);\nstatic int test_decrypt_ctr(void);\nstatic int test_encrypt_ecb(void);\nstatic int test_decrypt_ecb(void);\nstatic void test_encrypt_ecb_verbose(void);\n\n\nint main(void)\n{\n    int exit;\n\n#if defined(AES256)\n    printf(\"\\nTesting AES256\\n\\n\");\n#elif defined(AES192)\n    printf(\"\\nTesting AES192\\n\\n\");\n#elif defined(AES128)\n    printf(\"\\nTesting AES128\\n\\n\");\n#else\n    printf(\"You need to specify a symbol between AES128, AES192 or AES256. Exiting\");\n    return 0;\n#endif\n\n    exit = test_encrypt_cbc() + test_decrypt_cbc() +\n\ttest_encrypt_ctr() + test_decrypt_ctr() +\n\ttest_decrypt_ecb() + test_encrypt_ecb();\n    test_encrypt_ecb_verbose();\n\n    return exit;\n}\n\n\n// prints string as hex\nstatic void phex(uint8_t* str)\n{\n\n#if defined(AES256)\n    uint8_t len = 32;\n#elif defined(AES192)\n    uint8_t len = 24;\n#elif defined(AES128)\n    uint8_t len = 16;\n#endif\n\n    unsigned char i;\n    for (i = 0; i < len; ++i)\n        printf(\"%.2x\", str[i]);\n    printf(\"\\n\");\n}\n\nstatic void test_encrypt_ecb_verbose(void)\n{\n    // Example of more verbose verification\n\n    uint8_t i;\n\n    // 128bit key\n    uint8_t key[16] =        { (uint8_t) 0x2b, (uint8_t) 0x7e, (uint8_t) 0x15, (uint8_t) 0x16, (uint8_t) 0x28, (uint8_t) 0xae, (uint8_t) 0xd2, (uint8_t) 0xa6, (uint8_t) 0xab, (uint8_t) 0xf7, (uint8_t) 0x15, (uint8_t) 0x88, (uint8_t) 0x09, (uint8_t) 0xcf, (uint8_t) 0x4f, (uint8_t) 0x3c };\n    // 512bit text\n    uint8_t plain_text[64] = { (uint8_t) 0x6b, (uint8_t) 0xc1, (uint8_t) 0xbe, (uint8_t) 0xe2, (uint8_t) 0x2e, (uint8_t) 0x40, (uint8_t) 0x9f, (uint8_t) 0x96, (uint8_t) 0xe9, (uint8_t) 0x3d, (uint8_t) 0x7e, (uint8_t) 0x11, (uint8_t) 0x73, (uint8_t) 0x93, (uint8_t) 0x17, (uint8_t) 0x2a,\n                               (uint8_t) 0xae, (uint8_t) 0x2d, (uint8_t) 0x8a, (uint8_t) 0x57, (uint8_t) 0x1e, (uint8_t) 0x03, (uint8_t) 0xac, (uint8_t) 0x9c, (uint8_t) 0x9e, (uint8_t) 0xb7, (uint8_t) 0x6f, (uint8_t) 0xac, (uint8_t) 0x45, (uint8_t) 0xaf, (uint8_t) 0x8e, (uint8_t) 0x51,\n                               (uint8_t) 0x30, (uint8_t) 0xc8, (uint8_t) 0x1c, (uint8_t) 0x46, (uint8_t) 0xa3, (uint8_t) 0x5c, (uint8_t) 0xe4, (uint8_t) 0x11, (uint8_t) 0xe5, (uint8_t) 0xfb, (uint8_t) 0xc1, (uint8_t) 0x19, (uint8_t) 0x1a, (uint8_t) 0x0a, (uint8_t) 0x52, (uint8_t) 0xef,\n                               (uint8_t) 0xf6, (uint8_t) 0x9f, (uint8_t) 0x24, (uint8_t) 0x45, (uint8_t) 0xdf, (uint8_t) 0x4f, (uint8_t) 0x9b, (uint8_t) 0x17, (uint8_t) 0xad, (uint8_t) 0x2b, (uint8_t) 0x41, (uint8_t) 0x7b, (uint8_t) 0xe6, (uint8_t) 0x6c, (uint8_t) 0x37, (uint8_t) 0x10 };\n\n    // print text to encrypt, key and IV\n    printf(\"ECB encrypt verbose:\\n\\n\");\n    printf(\"plain text:\\n\");\n    for (i = (uint8_t) 0; i < (uint8_t) 4; ++i)\n    {\n        phex(plain_text + i * (uint8_t) 16);\n    }\n    printf(\"\\n\");\n\n    printf(\"key:\\n\");\n    phex(key);\n    printf(\"\\n\");\n\n    // print the resulting cipher as 4 x 16 byte strings\n    printf(\"ciphertext:\\n\");\n    \n    struct AES_ctx ctx;\n    AES_init_ctx(&ctx, key);\n\n    for (i = 0; i < 4; ++i)\n    {\n      AES_ECB_encrypt(&ctx, plain_text + (i * 16));\n      phex(plain_text + (i * 16));\n    }\n    printf(\"\\n\");\n}\n\n\nstatic int test_encrypt_ecb(void)\n{\n#if defined(AES256)\n    uint8_t key[] = { 0x60, 0x3d, 0xeb, 0x10, 0x15, 0xca, 0x71, 0xbe, 0x2b, 0x73, 0xae, 0xf0, 0x85, 0x7d, 0x77, 0x81,\n                      0x1f, 0x35, 0x2c, 0x07, 0x3b, 0x61, 0x08, 0xd7, 0x2d, 0x98, 0x10, 0xa3, 0x09, 0x14, 0xdf, 0xf4 };\n    uint8_t out[] = { 0xf3, 0xee, 0xd1, 0xbd, 0xb5, 0xd2, 0xa0, 0x3c, 0x06, 0x4b, 0x5a, 0x7e, 0x3d, 0xb1, 0x81, 0xf8 };\n#elif defined(AES192)\n    uint8_t key[] = { 0x8e, 0x73, 0xb0, 0xf7, 0xda, 0x0e, 0x64, 0x52, 0xc8, 0x10, 0xf3, 0x2b, 0x80, 0x90, 0x79, 0xe5,\n                      0x62, 0xf8, 0xea, 0xd2, 0x52, 0x2c, 0x6b, 0x7b };\n    uint8_t out[] = { 0xbd, 0x33, 0x4f, 0x1d, 0x6e, 0x45, 0xf2, 0x5f, 0xf7, 0x12, 0xa2, 0x14, 0x57, 0x1f, 0xa5, 0xcc };\n#elif defined(AES128)\n    uint8_t key[] = { 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c };\n    uint8_t out[] = { 0x3a, 0xd7, 0x7b, 0xb4, 0x0d, 0x7a, 0x36, 0x60, 0xa8, 0x9e, 0xca, 0xf3, 0x24, 0x66, 0xef, 0x97 };\n#endif\n\n    uint8_t in[]  = { 0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a };\n    struct AES_ctx ctx;\n\n    AES_init_ctx(&ctx, key);\n    AES_ECB_encrypt(&ctx, in);\n\n    printf(\"ECB encrypt: \");\n\n    if (0 == memcmp((char*) out, (char*) in, 16)) {\n        printf(\"SUCCESS!\\n\");\n\treturn(0);\n    } else {\n        printf(\"FAILURE!\\n\");\n\treturn(1);\n    }\n}\n\nstatic int test_decrypt_cbc(void)\n{\n\n#if defined(AES256)\n    uint8_t key[] = { 0x60, 0x3d, 0xeb, 0x10, 0x15, 0xca, 0x71, 0xbe, 0x2b, 0x73, 0xae, 0xf0, 0x85, 0x7d, 0x77, 0x81,\n                      0x1f, 0x35, 0x2c, 0x07, 0x3b, 0x61, 0x08, 0xd7, 0x2d, 0x98, 0x10, 0xa3, 0x09, 0x14, 0xdf, 0xf4 };\n    uint8_t in[]  = { 0xf5, 0x8c, 0x4c, 0x04, 0xd6, 0xe5, 0xf1, 0xba, 0x77, 0x9e, 0xab, 0xfb, 0x5f, 0x7b, 0xfb, 0xd6,\n                      0x9c, 0xfc, 0x4e, 0x96, 0x7e, 0xdb, 0x80, 0x8d, 0x67, 0x9f, 0x77, 0x7b, 0xc6, 0x70, 0x2c, 0x7d,\n                      0x39, 0xf2, 0x33, 0x69, 0xa9, 0xd9, 0xba, 0xcf, 0xa5, 0x30, 0xe2, 0x63, 0x04, 0x23, 0x14, 0x61,\n                      0xb2, 0xeb, 0x05, 0xe2, 0xc3, 0x9b, 0xe9, 0xfc, 0xda, 0x6c, 0x19, 0x07, 0x8c, 0x6a, 0x9d, 0x1b };\n#elif defined(AES192)\n    uint8_t key[] = { 0x8e, 0x73, 0xb0, 0xf7, 0xda, 0x0e, 0x64, 0x52, 0xc8, 0x10, 0xf3, 0x2b, 0x80, 0x90, 0x79, 0xe5, 0x62, 0xf8, 0xea, 0xd2, 0x52, 0x2c, 0x6b, 0x7b };\n    uint8_t in[]  = { 0x4f, 0x02, 0x1d, 0xb2, 0x43, 0xbc, 0x63, 0x3d, 0x71, 0x78, 0x18, 0x3a, 0x9f, 0xa0, 0x71, 0xe8,\n                      0xb4, 0xd9, 0xad, 0xa9, 0xad, 0x7d, 0xed, 0xf4, 0xe5, 0xe7, 0x38, 0x76, 0x3f, 0x69, 0x14, 0x5a,\n                      0x57, 0x1b, 0x24, 0x20, 0x12, 0xfb, 0x7a, 0xe0, 0x7f, 0xa9, 0xba, 0xac, 0x3d, 0xf1, 0x02, 0xe0,\n                      0x08, 0xb0, 0xe2, 0x79, 0x88, 0x59, 0x88, 0x81, 0xd9, 0x20, 0xa9, 0xe6, 0x4f, 0x56, 0x15, 0xcd };\n#elif defined(AES128)\n    uint8_t key[] = { 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c };\n    uint8_t in[]  = { 0x76, 0x49, 0xab, 0xac, 0x81, 0x19, 0xb2, 0x46, 0xce, 0xe9, 0x8e, 0x9b, 0x12, 0xe9, 0x19, 0x7d,\n                      0x50, 0x86, 0xcb, 0x9b, 0x50, 0x72, 0x19, 0xee, 0x95, 0xdb, 0x11, 0x3a, 0x91, 0x76, 0x78, 0xb2,\n                      0x73, 0xbe, 0xd6, 0xb8, 0xe3, 0xc1, 0x74, 0x3b, 0x71, 0x16, 0xe6, 0x9e, 0x22, 0x22, 0x95, 0x16,\n                      0x3f, 0xf1, 0xca, 0xa1, 0x68, 0x1f, 0xac, 0x09, 0x12, 0x0e, 0xca, 0x30, 0x75, 0x86, 0xe1, 0xa7 };\n#endif\n    uint8_t iv[]  = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };\n    uint8_t out[] = { 0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a,\n                      0xae, 0x2d, 0x8a, 0x57, 0x1e, 0x03, 0xac, 0x9c, 0x9e, 0xb7, 0x6f, 0xac, 0x45, 0xaf, 0x8e, 0x51,\n                      0x30, 0xc8, 0x1c, 0x46, 0xa3, 0x5c, 0xe4, 0x11, 0xe5, 0xfb, 0xc1, 0x19, 0x1a, 0x0a, 0x52, 0xef,\n                      0xf6, 0x9f, 0x24, 0x45, 0xdf, 0x4f, 0x9b, 0x17, 0xad, 0x2b, 0x41, 0x7b, 0xe6, 0x6c, 0x37, 0x10 };\n//  uint8_t buffer[64];\n    struct AES_ctx ctx;\n\n    AES_init_ctx_iv(&ctx, key, iv);\n    AES_CBC_decrypt_buffer(&ctx, in, 64);\n\n    printf(\"CBC decrypt: \");\n\n    if (0 == memcmp((char*) out, (char*) in, 64)) {\n        printf(\"SUCCESS!\\n\");\n\treturn(0);\n    } else {\n        printf(\"FAILURE!\\n\");\n\treturn(1);\n    }\n}\n\nstatic int test_encrypt_cbc(void)\n{\n#if defined(AES256)\n    uint8_t key[] = { 0x60, 0x3d, 0xeb, 0x10, 0x15, 0xca, 0x71, 0xbe, 0x2b, 0x73, 0xae, 0xf0, 0x85, 0x7d, 0x77, 0x81,\n                      0x1f, 0x35, 0x2c, 0x07, 0x3b, 0x61, 0x08, 0xd7, 0x2d, 0x98, 0x10, 0xa3, 0x09, 0x14, 0xdf, 0xf4 };\n    uint8_t out[] = { 0xf5, 0x8c, 0x4c, 0x04, 0xd6, 0xe5, 0xf1, 0xba, 0x77, 0x9e, 0xab, 0xfb, 0x5f, 0x7b, 0xfb, 0xd6,\n                      0x9c, 0xfc, 0x4e, 0x96, 0x7e, 0xdb, 0x80, 0x8d, 0x67, 0x9f, 0x77, 0x7b, 0xc6, 0x70, 0x2c, 0x7d,\n                      0x39, 0xf2, 0x33, 0x69, 0xa9, 0xd9, 0xba, 0xcf, 0xa5, 0x30, 0xe2, 0x63, 0x04, 0x23, 0x14, 0x61,\n                      0xb2, 0xeb, 0x05, 0xe2, 0xc3, 0x9b, 0xe9, 0xfc, 0xda, 0x6c, 0x19, 0x07, 0x8c, 0x6a, 0x9d, 0x1b };\n#elif defined(AES192)\n    uint8_t key[] = { 0x8e, 0x73, 0xb0, 0xf7, 0xda, 0x0e, 0x64, 0x52, 0xc8, 0x10, 0xf3, 0x2b, 0x80, 0x90, 0x79, 0xe5, 0x62, 0xf8, 0xea, 0xd2, 0x52, 0x2c, 0x6b, 0x7b };\n    uint8_t out[] = { 0x4f, 0x02, 0x1d, 0xb2, 0x43, 0xbc, 0x63, 0x3d, 0x71, 0x78, 0x18, 0x3a, 0x9f, 0xa0, 0x71, 0xe8,\n                      0xb4, 0xd9, 0xad, 0xa9, 0xad, 0x7d, 0xed, 0xf4, 0xe5, 0xe7, 0x38, 0x76, 0x3f, 0x69, 0x14, 0x5a,\n                      0x57, 0x1b, 0x24, 0x20, 0x12, 0xfb, 0x7a, 0xe0, 0x7f, 0xa9, 0xba, 0xac, 0x3d, 0xf1, 0x02, 0xe0,\n                      0x08, 0xb0, 0xe2, 0x79, 0x88, 0x59, 0x88, 0x81, 0xd9, 0x20, 0xa9, 0xe6, 0x4f, 0x56, 0x15, 0xcd };\n#elif defined(AES128)\n    uint8_t key[] = { 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c };\n    uint8_t out[] = { 0x76, 0x49, 0xab, 0xac, 0x81, 0x19, 0xb2, 0x46, 0xce, 0xe9, 0x8e, 0x9b, 0x12, 0xe9, 0x19, 0x7d,\n                      0x50, 0x86, 0xcb, 0x9b, 0x50, 0x72, 0x19, 0xee, 0x95, 0xdb, 0x11, 0x3a, 0x91, 0x76, 0x78, 0xb2,\n                      0x73, 0xbe, 0xd6, 0xb8, 0xe3, 0xc1, 0x74, 0x3b, 0x71, 0x16, 0xe6, 0x9e, 0x22, 0x22, 0x95, 0x16,\n                      0x3f, 0xf1, 0xca, 0xa1, 0x68, 0x1f, 0xac, 0x09, 0x12, 0x0e, 0xca, 0x30, 0x75, 0x86, 0xe1, 0xa7 };\n#endif\n    uint8_t iv[]  = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };\n    uint8_t in[]  = { 0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a,\n                      0xae, 0x2d, 0x8a, 0x57, 0x1e, 0x03, 0xac, 0x9c, 0x9e, 0xb7, 0x6f, 0xac, 0x45, 0xaf, 0x8e, 0x51,\n                      0x30, 0xc8, 0x1c, 0x46, 0xa3, 0x5c, 0xe4, 0x11, 0xe5, 0xfb, 0xc1, 0x19, 0x1a, 0x0a, 0x52, 0xef,\n                      0xf6, 0x9f, 0x24, 0x45, 0xdf, 0x4f, 0x9b, 0x17, 0xad, 0x2b, 0x41, 0x7b, 0xe6, 0x6c, 0x37, 0x10 };\n    struct AES_ctx ctx;\n\n    AES_init_ctx_iv(&ctx, key, iv);\n    AES_CBC_encrypt_buffer(&ctx, in, 64);\n\n    printf(\"CBC encrypt: \");\n\n    if (0 == memcmp((char*) out, (char*) in, 64)) {\n        printf(\"SUCCESS!\\n\");\n\treturn(0);\n    } else {\n        printf(\"FAILURE!\\n\");\n\treturn(1);\n    }\n}\n\nstatic int test_xcrypt_ctr(const char* xcrypt);\nstatic int test_encrypt_ctr(void)\n{\n    return test_xcrypt_ctr(\"encrypt\");\n}\n\nstatic int test_decrypt_ctr(void)\n{\n    return test_xcrypt_ctr(\"decrypt\");\n}\n\nstatic int test_xcrypt_ctr(const char* xcrypt)\n{\n#if defined(AES256)\n    uint8_t key[32] = { 0x60, 0x3d, 0xeb, 0x10, 0x15, 0xca, 0x71, 0xbe, 0x2b, 0x73, 0xae, 0xf0, 0x85, 0x7d, 0x77, 0x81,\n                        0x1f, 0x35, 0x2c, 0x07, 0x3b, 0x61, 0x08, 0xd7, 0x2d, 0x98, 0x10, 0xa3, 0x09, 0x14, 0xdf, 0xf4 };\n    uint8_t in[64]  = { 0x60, 0x1e, 0xc3, 0x13, 0x77, 0x57, 0x89, 0xa5, 0xb7, 0xa7, 0xf5, 0x04, 0xbb, 0xf3, 0xd2, 0x28, \n                        0xf4, 0x43, 0xe3, 0xca, 0x4d, 0x62, 0xb5, 0x9a, 0xca, 0x84, 0xe9, 0x90, 0xca, 0xca, 0xf5, 0xc5, \n                        0x2b, 0x09, 0x30, 0xda, 0xa2, 0x3d, 0xe9, 0x4c, 0xe8, 0x70, 0x17, 0xba, 0x2d, 0x84, 0x98, 0x8d, \n                        0xdf, 0xc9, 0xc5, 0x8d, 0xb6, 0x7a, 0xad, 0xa6, 0x13, 0xc2, 0xdd, 0x08, 0x45, 0x79, 0x41, 0xa6 };\n#elif defined(AES192)\n    uint8_t key[24] = { 0x8e, 0x73, 0xb0, 0xf7, 0xda, 0x0e, 0x64, 0x52, 0xc8, 0x10, 0xf3, 0x2b, 0x80, 0x90, 0x79, 0xe5, \n                        0x62, 0xf8, 0xea, 0xd2, 0x52, 0x2c, 0x6b, 0x7b };\n    uint8_t in[64]  = { 0x1a, 0xbc, 0x93, 0x24, 0x17, 0x52, 0x1c, 0xa2, 0x4f, 0x2b, 0x04, 0x59, 0xfe, 0x7e, 0x6e, 0x0b, \n                        0x09, 0x03, 0x39, 0xec, 0x0a, 0xa6, 0xfa, 0xef, 0xd5, 0xcc, 0xc2, 0xc6, 0xf4, 0xce, 0x8e, 0x94, \n                        0x1e, 0x36, 0xb2, 0x6b, 0xd1, 0xeb, 0xc6, 0x70, 0xd1, 0xbd, 0x1d, 0x66, 0x56, 0x20, 0xab, 0xf7, \n                        0x4f, 0x78, 0xa7, 0xf6, 0xd2, 0x98, 0x09, 0x58, 0x5a, 0x97, 0xda, 0xec, 0x58, 0xc6, 0xb0, 0x50 };\n#elif defined(AES128)\n    uint8_t key[16] = { 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c };\n    uint8_t in[64]  = { 0x87, 0x4d, 0x61, 0x91, 0xb6, 0x20, 0xe3, 0x26, 0x1b, 0xef, 0x68, 0x64, 0x99, 0x0d, 0xb6, 0xce,\n                        0x98, 0x06, 0xf6, 0x6b, 0x79, 0x70, 0xfd, 0xff, 0x86, 0x17, 0x18, 0x7b, 0xb9, 0xff, 0xfd, 0xff,\n                        0x5a, 0xe4, 0xdf, 0x3e, 0xdb, 0xd5, 0xd3, 0x5e, 0x5b, 0x4f, 0x09, 0x02, 0x0d, 0xb0, 0x3e, 0xab,\n                        0x1e, 0x03, 0x1d, 0xda, 0x2f, 0xbe, 0x03, 0xd1, 0x79, 0x21, 0x70, 0xa0, 0xf3, 0x00, 0x9c, 0xee };\n#endif\n    uint8_t iv[16]  = { 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff };\n    uint8_t out[64] = { 0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a,\n                        0xae, 0x2d, 0x8a, 0x57, 0x1e, 0x03, 0xac, 0x9c, 0x9e, 0xb7, 0x6f, 0xac, 0x45, 0xaf, 0x8e, 0x51,\n                        0x30, 0xc8, 0x1c, 0x46, 0xa3, 0x5c, 0xe4, 0x11, 0xe5, 0xfb, 0xc1, 0x19, 0x1a, 0x0a, 0x52, 0xef,\n                        0xf6, 0x9f, 0x24, 0x45, 0xdf, 0x4f, 0x9b, 0x17, 0xad, 0x2b, 0x41, 0x7b, 0xe6, 0x6c, 0x37, 0x10 };\n    struct AES_ctx ctx;\n    \n    AES_init_ctx_iv(&ctx, key, iv);\n    AES_CTR_xcrypt_buffer(&ctx, in, 64);\n  \n    printf(\"CTR %s: \", xcrypt);\n  \n    if (0 == memcmp((char *) out, (char *) in, 64)) {\n        printf(\"SUCCESS!\\n\");\n\treturn(0);\n    } else {\n        printf(\"FAILURE!\\n\");\n\treturn(1);\n    }\n}\n\n\nstatic int test_decrypt_ecb(void)\n{\n#if defined(AES256)\n    uint8_t key[] = { 0x60, 0x3d, 0xeb, 0x10, 0x15, 0xca, 0x71, 0xbe, 0x2b, 0x73, 0xae, 0xf0, 0x85, 0x7d, 0x77, 0x81,\n                      0x1f, 0x35, 0x2c, 0x07, 0x3b, 0x61, 0x08, 0xd7, 0x2d, 0x98, 0x10, 0xa3, 0x09, 0x14, 0xdf, 0xf4 };\n    uint8_t in[]  = { 0xf3, 0xee, 0xd1, 0xbd, 0xb5, 0xd2, 0xa0, 0x3c, 0x06, 0x4b, 0x5a, 0x7e, 0x3d, 0xb1, 0x81, 0xf8 };\n#elif defined(AES192)\n    uint8_t key[] = { 0x8e, 0x73, 0xb0, 0xf7, 0xda, 0x0e, 0x64, 0x52, 0xc8, 0x10, 0xf3, 0x2b, 0x80, 0x90, 0x79, 0xe5,\n                      0x62, 0xf8, 0xea, 0xd2, 0x52, 0x2c, 0x6b, 0x7b };\n    uint8_t in[]  = { 0xbd, 0x33, 0x4f, 0x1d, 0x6e, 0x45, 0xf2, 0x5f, 0xf7, 0x12, 0xa2, 0x14, 0x57, 0x1f, 0xa5, 0xcc };\n#elif defined(AES128)\n    uint8_t key[] = { 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c };\n    uint8_t in[]  = { 0x3a, 0xd7, 0x7b, 0xb4, 0x0d, 0x7a, 0x36, 0x60, 0xa8, 0x9e, 0xca, 0xf3, 0x24, 0x66, 0xef, 0x97 };\n#endif\n\n    uint8_t out[]   = { 0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a };\n    struct AES_ctx ctx;\n    \n    AES_init_ctx(&ctx, key);\n    AES_ECB_decrypt(&ctx, in);\n\n    printf(\"ECB decrypt: \");\n\n    if (0 == memcmp((char*) out, (char*) in, 16)) {\n        printf(\"SUCCESS!\\n\");\n\treturn(0);\n    } else {\n        printf(\"FAILURE!\\n\");\n\treturn(1);\n    }\n}\n",
    "assembly": "\nrepos/test.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 <main>:\n   0:\tf3 0f 1e fa          \tendbr64 \n   4:\t55                   \tpush   %rbp\n   5:\t48 89 e5             \tmov    %rsp,%rbp\n   8:\t53                   \tpush   %rbx\n   9:\t48 83 ec 18          \tsub    $0x18,%rsp\n   d:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 14 <main+0x14>\n  14:\t48 89 c7             \tmov    %rax,%rdi\n  17:\te8 00 00 00 00       \tcall   1c <main+0x1c>\n  1c:\te8 62 05 00 00       \tcall   583 <test_encrypt_cbc>\n  21:\t89 c3                \tmov    %eax,%ebx\n  23:\te8 62 03 00 00       \tcall   38a <test_decrypt_cbc>\n  28:\t01 c3                \tadd    %eax,%ebx\n  2a:\te8 4a 07 00 00       \tcall   779 <test_encrypt_ctr>\n  2f:\t01 c3                \tadd    %eax,%ebx\n  31:\te8 5c 07 00 00       \tcall   792 <test_decrypt_ctr>\n  36:\t01 c3                \tadd    %eax,%ebx\n  38:\te8 78 09 00 00       \tcall   9b5 <test_decrypt_ecb>\n  3d:\t01 c3                \tadd    %eax,%ebx\n  3f:\te8 38 02 00 00       \tcall   27c <test_encrypt_ecb>\n  44:\t01 d8                \tadd    %ebx,%eax\n  46:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  49:\te8 64 00 00 00       \tcall   b2 <test_encrypt_ecb_verbose>\n  4e:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  51:\t48 8b 5d f8          \tmov    -0x8(%rbp),%rbx\n  55:\tc9                   \tleave  \n  56:\tc3                   \tret    \n\n0000000000000057 <phex>:\n  57:\tf3 0f 1e fa          \tendbr64 \n  5b:\t55                   \tpush   %rbp\n  5c:\t48 89 e5             \tmov    %rsp,%rbp\n  5f:\t48 83 ec 20          \tsub    $0x20,%rsp\n  63:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  67:\tc6 45 ff 10          \tmovb   $0x10,-0x1(%rbp)\n  6b:\tc6 45 fe 00          \tmovb   $0x0,-0x2(%rbp)\n  6f:\teb 2b                \tjmp    9c <phex+0x45>\n  71:\t0f b6 55 fe          \tmovzbl -0x2(%rbp),%edx\n  75:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  79:\t48 01 d0             \tadd    %rdx,%rax\n  7c:\t0f b6 00             \tmovzbl (%rax),%eax\n  7f:\t0f b6 c0             \tmovzbl %al,%eax\n  82:\t89 c6                \tmov    %eax,%esi\n  84:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 8b <phex+0x34>\n  8b:\t48 89 c7             \tmov    %rax,%rdi\n  8e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  93:\te8 00 00 00 00       \tcall   98 <phex+0x41>\n  98:\t80 45 fe 01          \taddb   $0x1,-0x2(%rbp)\n  9c:\t0f b6 45 fe          \tmovzbl -0x2(%rbp),%eax\n  a0:\t3a 45 ff             \tcmp    -0x1(%rbp),%al\n  a3:\t72 cc                \tjb     71 <phex+0x1a>\n  a5:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n  aa:\te8 00 00 00 00       \tcall   af <phex+0x58>\n  af:\t90                   \tnop\n  b0:\tc9                   \tleave  \n  b1:\tc3                   \tret    \n\n00000000000000b2 <test_encrypt_ecb_verbose>:\n  b2:\tf3 0f 1e fa          \tendbr64 \n  b6:\t55                   \tpush   %rbp\n  b7:\t48 89 e5             \tmov    %rsp,%rbp\n  ba:\t48 81 ec 30 01 00 00 \tsub    $0x130,%rsp\n  c1:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n  c8:\t00 00 \n  ca:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  ce:\t31 c0                \txor    %eax,%eax\n  d0:\t48 b8 2b 7e 15 16 28 \tmovabs $0xa6d2ae2816157e2b,%rax\n  d7:\tae d2 a6 \n  da:\t48 ba ab f7 15 88 09 \tmovabs $0x3c4fcf098815f7ab,%rdx\n  e1:\tcf 4f 3c \n  e4:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n  e8:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n  ec:\t48 b8 6b c1 be e2 2e \tmovabs $0x969f402ee2bec16b,%rax\n  f3:\t40 9f 96 \n  f6:\t48 ba e9 3d 7e 11 73 \tmovabs $0x2a179373117e3de9,%rdx\n  fd:\t93 17 2a \n 100:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 104:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n 108:\t48 b8 ae 2d 8a 57 1e \tmovabs $0x9cac031e578a2dae,%rax\n 10f:\t03 ac 9c \n 112:\t48 ba 9e b7 6f ac 45 \tmovabs $0x518eaf45ac6fb79e,%rdx\n 119:\taf 8e 51 \n 11c:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 120:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n 124:\t48 b8 30 c8 1c 46 a3 \tmovabs $0x11e45ca3461cc830,%rax\n 12b:\t5c e4 11 \n 12e:\t48 ba e5 fb c1 19 1a \tmovabs $0xef520a1a19c1fbe5,%rdx\n 135:\t0a 52 ef \n 138:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 13c:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 140:\t48 b8 f6 9f 24 45 df \tmovabs $0x179b4fdf45249ff6,%rax\n 147:\t4f 9b 17 \n 14a:\t48 ba ad 2b 41 7b e6 \tmovabs $0x10376ce67b412bad,%rdx\n 151:\t6c 37 10 \n 154:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 158:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n 15c:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 163 <test_encrypt_ecb_verbose+0xb1>\n 163:\t48 89 c7             \tmov    %rax,%rdi\n 166:\te8 00 00 00 00       \tcall   16b <test_encrypt_ecb_verbose+0xb9>\n 16b:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 172 <test_encrypt_ecb_verbose+0xc0>\n 172:\t48 89 c7             \tmov    %rax,%rdi\n 175:\te8 00 00 00 00       \tcall   17a <test_encrypt_ecb_verbose+0xc8>\n 17a:\tc6 85 df fe ff ff 00 \tmovb   $0x0,-0x121(%rbp)\n 181:\teb 22                \tjmp    1a5 <test_encrypt_ecb_verbose+0xf3>\n 183:\t0f b6 85 df fe ff ff \tmovzbl -0x121(%rbp),%eax\n 18a:\tc1 e0 04             \tshl    $0x4,%eax\n 18d:\t48 98                \tcltq   \n 18f:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n 193:\t48 01 d0             \tadd    %rdx,%rax\n 196:\t48 89 c7             \tmov    %rax,%rdi\n 199:\te8 b9 fe ff ff       \tcall   57 <phex>\n 19e:\t80 85 df fe ff ff 01 \taddb   $0x1,-0x121(%rbp)\n 1a5:\t80 bd df fe ff ff 03 \tcmpb   $0x3,-0x121(%rbp)\n 1ac:\t76 d5                \tjbe    183 <test_encrypt_ecb_verbose+0xd1>\n 1ae:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n 1b3:\te8 00 00 00 00       \tcall   1b8 <test_encrypt_ecb_verbose+0x106>\n 1b8:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1bf <test_encrypt_ecb_verbose+0x10d>\n 1bf:\t48 89 c7             \tmov    %rax,%rdi\n 1c2:\te8 00 00 00 00       \tcall   1c7 <test_encrypt_ecb_verbose+0x115>\n 1c7:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 1cb:\t48 89 c7             \tmov    %rax,%rdi\n 1ce:\te8 84 fe ff ff       \tcall   57 <phex>\n 1d3:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n 1d8:\te8 00 00 00 00       \tcall   1dd <test_encrypt_ecb_verbose+0x12b>\n 1dd:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1e4 <test_encrypt_ecb_verbose+0x132>\n 1e4:\t48 89 c7             \tmov    %rax,%rdi\n 1e7:\te8 00 00 00 00       \tcall   1ec <test_encrypt_ecb_verbose+0x13a>\n 1ec:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n 1f0:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n 1f7:\t48 89 d6             \tmov    %rdx,%rsi\n 1fa:\t48 89 c7             \tmov    %rax,%rdi\n 1fd:\te8 00 00 00 00       \tcall   202 <test_encrypt_ecb_verbose+0x150>\n 202:\tc6 85 df fe ff ff 00 \tmovb   $0x0,-0x121(%rbp)\n 209:\teb 47                \tjmp    252 <test_encrypt_ecb_verbose+0x1a0>\n 20b:\t0f b6 85 df fe ff ff \tmovzbl -0x121(%rbp),%eax\n 212:\tc1 e0 04             \tshl    $0x4,%eax\n 215:\t48 98                \tcltq   \n 217:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n 21b:\t48 01 c2             \tadd    %rax,%rdx\n 21e:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n 225:\t48 89 d6             \tmov    %rdx,%rsi\n 228:\t48 89 c7             \tmov    %rax,%rdi\n 22b:\te8 00 00 00 00       \tcall   230 <test_encrypt_ecb_verbose+0x17e>\n 230:\t0f b6 85 df fe ff ff \tmovzbl -0x121(%rbp),%eax\n 237:\tc1 e0 04             \tshl    $0x4,%eax\n 23a:\t48 98                \tcltq   \n 23c:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n 240:\t48 01 d0             \tadd    %rdx,%rax\n 243:\t48 89 c7             \tmov    %rax,%rdi\n 246:\te8 0c fe ff ff       \tcall   57 <phex>\n 24b:\t80 85 df fe ff ff 01 \taddb   $0x1,-0x121(%rbp)\n 252:\t80 bd df fe ff ff 03 \tcmpb   $0x3,-0x121(%rbp)\n 259:\t76 b0                \tjbe    20b <test_encrypt_ecb_verbose+0x159>\n 25b:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n 260:\te8 00 00 00 00       \tcall   265 <test_encrypt_ecb_verbose+0x1b3>\n 265:\t90                   \tnop\n 266:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 26a:\t64 48 2b 04 25 28 00 \tsub    %fs:0x28,%rax\n 271:\t00 00 \n 273:\t74 05                \tje     27a <test_encrypt_ecb_verbose+0x1c8>\n 275:\te8 00 00 00 00       \tcall   27a <test_encrypt_ecb_verbose+0x1c8>\n 27a:\tc9                   \tleave  \n 27b:\tc3                   \tret    \n\n000000000000027c <test_encrypt_ecb>:\n 27c:\tf3 0f 1e fa          \tendbr64 \n 280:\t55                   \tpush   %rbp\n 281:\t48 89 e5             \tmov    %rsp,%rbp\n 284:\t48 81 ec 00 01 00 00 \tsub    $0x100,%rsp\n 28b:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 292:\t00 00 \n 294:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 298:\t31 c0                \txor    %eax,%eax\n 29a:\t48 b8 2b 7e 15 16 28 \tmovabs $0xa6d2ae2816157e2b,%rax\n 2a1:\tae d2 a6 \n 2a4:\t48 ba ab f7 15 88 09 \tmovabs $0x3c4fcf098815f7ab,%rdx\n 2ab:\tcf 4f 3c \n 2ae:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 2b2:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n 2b6:\t48 b8 3a d7 7b b4 0d \tmovabs $0x60367a0db47bd73a,%rax\n 2bd:\t7a 36 60 \n 2c0:\t48 ba a8 9e ca f3 24 \tmovabs $0x97ef6624f3ca9ea8,%rdx\n 2c7:\t66 ef 97 \n 2ca:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 2ce:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 2d2:\t48 b8 6b c1 be e2 2e \tmovabs $0x969f402ee2bec16b,%rax\n 2d9:\t40 9f 96 \n 2dc:\t48 ba e9 3d 7e 11 73 \tmovabs $0x2a179373117e3de9,%rdx\n 2e3:\t93 17 2a \n 2e6:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 2ea:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n 2ee:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n 2f2:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n 2f9:\t48 89 d6             \tmov    %rdx,%rsi\n 2fc:\t48 89 c7             \tmov    %rax,%rdi\n 2ff:\te8 00 00 00 00       \tcall   304 <test_encrypt_ecb+0x88>\n 304:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n 308:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n 30f:\t48 89 d6             \tmov    %rdx,%rsi\n 312:\t48 89 c7             \tmov    %rax,%rdi\n 315:\te8 00 00 00 00       \tcall   31a <test_encrypt_ecb+0x9e>\n 31a:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 321 <test_encrypt_ecb+0xa5>\n 321:\t48 89 c7             \tmov    %rax,%rdi\n 324:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 329:\te8 00 00 00 00       \tcall   32e <test_encrypt_ecb+0xb2>\n 32e:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n 332:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 336:\tba 10 00 00 00       \tmov    $0x10,%edx\n 33b:\t48 89 ce             \tmov    %rcx,%rsi\n 33e:\t48 89 c7             \tmov    %rax,%rdi\n 341:\te8 00 00 00 00       \tcall   346 <test_encrypt_ecb+0xca>\n 346:\t85 c0                \ttest   %eax,%eax\n 348:\t75 16                \tjne    360 <test_encrypt_ecb+0xe4>\n 34a:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 351 <test_encrypt_ecb+0xd5>\n 351:\t48 89 c7             \tmov    %rax,%rdi\n 354:\te8 00 00 00 00       \tcall   359 <test_encrypt_ecb+0xdd>\n 359:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 35e:\teb 14                \tjmp    374 <test_encrypt_ecb+0xf8>\n 360:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 367 <test_encrypt_ecb+0xeb>\n 367:\t48 89 c7             \tmov    %rax,%rdi\n 36a:\te8 00 00 00 00       \tcall   36f <test_encrypt_ecb+0xf3>\n 36f:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 374:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 378:\t64 48 2b 14 25 28 00 \tsub    %fs:0x28,%rdx\n 37f:\t00 00 \n 381:\t74 05                \tje     388 <test_encrypt_ecb+0x10c>\n 383:\te8 00 00 00 00       \tcall   388 <test_encrypt_ecb+0x10c>\n 388:\tc9                   \tleave  \n 389:\tc3                   \tret    \n\n000000000000038a <test_decrypt_cbc>:\n 38a:\tf3 0f 1e fa          \tendbr64 \n 38e:\t55                   \tpush   %rbp\n 38f:\t48 89 e5             \tmov    %rsp,%rbp\n 392:\t48 81 ec 70 01 00 00 \tsub    $0x170,%rsp\n 399:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 3a0:\t00 00 \n 3a2:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 3a6:\t31 c0                \txor    %eax,%eax\n 3a8:\t48 b8 2b 7e 15 16 28 \tmovabs $0xa6d2ae2816157e2b,%rax\n 3af:\tae d2 a6 \n 3b2:\t48 ba ab f7 15 88 09 \tmovabs $0x3c4fcf098815f7ab,%rdx\n 3b9:\tcf 4f 3c \n 3bc:\t48 89 85 50 ff ff ff \tmov    %rax,-0xb0(%rbp)\n 3c3:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n 3ca:\t48 b8 76 49 ab ac 81 \tmovabs $0x46b21981acab4976,%rax\n 3d1:\t19 b2 46 \n 3d4:\t48 ba ce e9 8e 9b 12 \tmovabs $0x7d19e9129b8ee9ce,%rdx\n 3db:\te9 19 7d \n 3de:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n 3e5:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n 3ec:\t48 b8 50 86 cb 9b 50 \tmovabs $0xee1972509bcb8650,%rax\n 3f3:\t72 19 ee \n 3f6:\t48 ba 95 db 11 3a 91 \tmovabs $0xb27876913a11db95,%rdx\n 3fd:\t76 78 b2 \n 400:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n 404:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n 408:\t48 b8 73 be d6 b8 e3 \tmovabs $0x3b74c1e3b8d6be73,%rax\n 40f:\tc1 74 3b \n 412:\t48 ba 71 16 e6 9e 22 \tmovabs $0x169522229ee61671,%rdx\n 419:\t22 95 16 \n 41c:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n 420:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n 424:\t48 b8 3f f1 ca a1 68 \tmovabs $0x9ac1f68a1caf13f,%rax\n 42b:\t1f ac 09 \n 42e:\t48 ba 12 0e ca 30 75 \tmovabs $0xa7e1867530ca0e12,%rdx\n 435:\t86 e1 a7 \n 438:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n 43c:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n 440:\t48 b8 00 01 02 03 04 \tmovabs $0x706050403020100,%rax\n 447:\t05 06 07 \n 44a:\t48 ba 08 09 0a 0b 0c \tmovabs $0xf0e0d0c0b0a0908,%rdx\n 451:\t0d 0e 0f \n 454:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n 45b:\t48 89 95 68 ff ff ff \tmov    %rdx,-0x98(%rbp)\n 462:\t48 b8 6b c1 be e2 2e \tmovabs $0x969f402ee2bec16b,%rax\n 469:\t40 9f 96 \n 46c:\t48 ba e9 3d 7e 11 73 \tmovabs $0x2a179373117e3de9,%rdx\n 473:\t93 17 2a \n 476:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 47a:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n 47e:\t48 b8 ae 2d 8a 57 1e \tmovabs $0x9cac031e578a2dae,%rax\n 485:\t03 ac 9c \n 488:\t48 ba 9e b7 6f ac 45 \tmovabs $0x518eaf45ac6fb79e,%rdx\n 48f:\taf 8e 51 \n 492:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 496:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n 49a:\t48 b8 30 c8 1c 46 a3 \tmovabs $0x11e45ca3461cc830,%rax\n 4a1:\t5c e4 11 \n 4a4:\t48 ba e5 fb c1 19 1a \tmovabs $0xef520a1a19c1fbe5,%rdx\n 4ab:\t0a 52 ef \n 4ae:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 4b2:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 4b6:\t48 b8 f6 9f 24 45 df \tmovabs $0x179b4fdf45249ff6,%rax\n 4bd:\t4f 9b 17 \n 4c0:\t48 ba ad 2b 41 7b e6 \tmovabs $0x10376ce67b412bad,%rdx\n 4c7:\t6c 37 10 \n 4ca:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 4ce:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n 4d2:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n 4d9:\t48 8d 8d 50 ff ff ff \tlea    -0xb0(%rbp),%rcx\n 4e0:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n 4e7:\t48 89 ce             \tmov    %rcx,%rsi\n 4ea:\t48 89 c7             \tmov    %rax,%rdi\n 4ed:\te8 00 00 00 00       \tcall   4f2 <test_decrypt_cbc+0x168>\n 4f2:\t48 8d 8d 70 ff ff ff \tlea    -0x90(%rbp),%rcx\n 4f9:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n 500:\tba 40 00 00 00       \tmov    $0x40,%edx\n 505:\t48 89 ce             \tmov    %rcx,%rsi\n 508:\t48 89 c7             \tmov    %rax,%rdi\n 50b:\te8 00 00 00 00       \tcall   510 <test_decrypt_cbc+0x186>\n 510:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 517 <test_decrypt_cbc+0x18d>\n 517:\t48 89 c7             \tmov    %rax,%rdi\n 51a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 51f:\te8 00 00 00 00       \tcall   524 <test_decrypt_cbc+0x19a>\n 524:\t48 8d 8d 70 ff ff ff \tlea    -0x90(%rbp),%rcx\n 52b:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 52f:\tba 40 00 00 00       \tmov    $0x40,%edx\n 534:\t48 89 ce             \tmov    %rcx,%rsi\n 537:\t48 89 c7             \tmov    %rax,%rdi\n 53a:\te8 00 00 00 00       \tcall   53f <test_decrypt_cbc+0x1b5>\n 53f:\t85 c0                \ttest   %eax,%eax\n 541:\t75 16                \tjne    559 <test_decrypt_cbc+0x1cf>\n 543:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 54a <test_decrypt_cbc+0x1c0>\n 54a:\t48 89 c7             \tmov    %rax,%rdi\n 54d:\te8 00 00 00 00       \tcall   552 <test_decrypt_cbc+0x1c8>\n 552:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 557:\teb 14                \tjmp    56d <test_decrypt_cbc+0x1e3>\n 559:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 560 <test_decrypt_cbc+0x1d6>\n 560:\t48 89 c7             \tmov    %rax,%rdi\n 563:\te8 00 00 00 00       \tcall   568 <test_decrypt_cbc+0x1de>\n 568:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 56d:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 571:\t64 48 2b 14 25 28 00 \tsub    %fs:0x28,%rdx\n 578:\t00 00 \n 57a:\t74 05                \tje     581 <test_decrypt_cbc+0x1f7>\n 57c:\te8 00 00 00 00       \tcall   581 <test_decrypt_cbc+0x1f7>\n 581:\tc9                   \tleave  \n 582:\tc3                   \tret    \n\n0000000000000583 <test_encrypt_cbc>:\n 583:\tf3 0f 1e fa          \tendbr64 \n 587:\t55                   \tpush   %rbp\n 588:\t48 89 e5             \tmov    %rsp,%rbp\n 58b:\t48 81 ec 70 01 00 00 \tsub    $0x170,%rsp\n 592:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 599:\t00 00 \n 59b:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 59f:\t31 c0                \txor    %eax,%eax\n 5a1:\t48 b8 2b 7e 15 16 28 \tmovabs $0xa6d2ae2816157e2b,%rax\n 5a8:\tae d2 a6 \n 5ab:\t48 ba ab f7 15 88 09 \tmovabs $0x3c4fcf098815f7ab,%rdx\n 5b2:\tcf 4f 3c \n 5b5:\t48 89 85 50 ff ff ff \tmov    %rax,-0xb0(%rbp)\n 5bc:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n 5c3:\t48 b8 76 49 ab ac 81 \tmovabs $0x46b21981acab4976,%rax\n 5ca:\t19 b2 46 \n 5cd:\t48 ba ce e9 8e 9b 12 \tmovabs $0x7d19e9129b8ee9ce,%rdx\n 5d4:\te9 19 7d \n 5d7:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n 5de:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n 5e5:\t48 b8 50 86 cb 9b 50 \tmovabs $0xee1972509bcb8650,%rax\n 5ec:\t72 19 ee \n 5ef:\t48 ba 95 db 11 3a 91 \tmovabs $0xb27876913a11db95,%rdx\n 5f6:\t76 78 b2 \n 5f9:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n 5fd:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n 601:\t48 b8 73 be d6 b8 e3 \tmovabs $0x3b74c1e3b8d6be73,%rax\n 608:\tc1 74 3b \n 60b:\t48 ba 71 16 e6 9e 22 \tmovabs $0x169522229ee61671,%rdx\n 612:\t22 95 16 \n 615:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n 619:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n 61d:\t48 b8 3f f1 ca a1 68 \tmovabs $0x9ac1f68a1caf13f,%rax\n 624:\t1f ac 09 \n 627:\t48 ba 12 0e ca 30 75 \tmovabs $0xa7e1867530ca0e12,%rdx\n 62e:\t86 e1 a7 \n 631:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n 635:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n 639:\t48 b8 00 01 02 03 04 \tmovabs $0x706050403020100,%rax\n 640:\t05 06 07 \n 643:\t48 ba 08 09 0a 0b 0c \tmovabs $0xf0e0d0c0b0a0908,%rdx\n 64a:\t0d 0e 0f \n 64d:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n 654:\t48 89 95 68 ff ff ff \tmov    %rdx,-0x98(%rbp)\n 65b:\t48 b8 6b c1 be e2 2e \tmovabs $0x969f402ee2bec16b,%rax\n 662:\t40 9f 96 \n 665:\t48 ba e9 3d 7e 11 73 \tmovabs $0x2a179373117e3de9,%rdx\n 66c:\t93 17 2a \n 66f:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 673:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n 677:\t48 b8 ae 2d 8a 57 1e \tmovabs $0x9cac031e578a2dae,%rax\n 67e:\t03 ac 9c \n 681:\t48 ba 9e b7 6f ac 45 \tmovabs $0x518eaf45ac6fb79e,%rdx\n 688:\taf 8e 51 \n 68b:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 68f:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n 693:\t48 b8 30 c8 1c 46 a3 \tmovabs $0x11e45ca3461cc830,%rax\n 69a:\t5c e4 11 \n 69d:\t48 ba e5 fb c1 19 1a \tmovabs $0xef520a1a19c1fbe5,%rdx\n 6a4:\t0a 52 ef \n 6a7:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 6ab:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 6af:\t48 b8 f6 9f 24 45 df \tmovabs $0x179b4fdf45249ff6,%rax\n 6b6:\t4f 9b 17 \n 6b9:\t48 ba ad 2b 41 7b e6 \tmovabs $0x10376ce67b412bad,%rdx\n 6c0:\t6c 37 10 \n 6c3:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 6c7:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n 6cb:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n 6d2:\t48 8d 8d 50 ff ff ff \tlea    -0xb0(%rbp),%rcx\n 6d9:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n 6e0:\t48 89 ce             \tmov    %rcx,%rsi\n 6e3:\t48 89 c7             \tmov    %rax,%rdi\n 6e6:\te8 00 00 00 00       \tcall   6eb <test_encrypt_cbc+0x168>\n 6eb:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n 6ef:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n 6f6:\tba 40 00 00 00       \tmov    $0x40,%edx\n 6fb:\t48 89 ce             \tmov    %rcx,%rsi\n 6fe:\t48 89 c7             \tmov    %rax,%rdi\n 701:\te8 00 00 00 00       \tcall   706 <test_encrypt_cbc+0x183>\n 706:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 70d <test_encrypt_cbc+0x18a>\n 70d:\t48 89 c7             \tmov    %rax,%rdi\n 710:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 715:\te8 00 00 00 00       \tcall   71a <test_encrypt_cbc+0x197>\n 71a:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n 71e:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n 725:\tba 40 00 00 00       \tmov    $0x40,%edx\n 72a:\t48 89 ce             \tmov    %rcx,%rsi\n 72d:\t48 89 c7             \tmov    %rax,%rdi\n 730:\te8 00 00 00 00       \tcall   735 <test_encrypt_cbc+0x1b2>\n 735:\t85 c0                \ttest   %eax,%eax\n 737:\t75 16                \tjne    74f <test_encrypt_cbc+0x1cc>\n 739:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 740 <test_encrypt_cbc+0x1bd>\n 740:\t48 89 c7             \tmov    %rax,%rdi\n 743:\te8 00 00 00 00       \tcall   748 <test_encrypt_cbc+0x1c5>\n 748:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 74d:\teb 14                \tjmp    763 <test_encrypt_cbc+0x1e0>\n 74f:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 756 <test_encrypt_cbc+0x1d3>\n 756:\t48 89 c7             \tmov    %rax,%rdi\n 759:\te8 00 00 00 00       \tcall   75e <test_encrypt_cbc+0x1db>\n 75e:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 763:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 767:\t64 48 2b 14 25 28 00 \tsub    %fs:0x28,%rdx\n 76e:\t00 00 \n 770:\t74 05                \tje     777 <test_encrypt_cbc+0x1f4>\n 772:\te8 00 00 00 00       \tcall   777 <test_encrypt_cbc+0x1f4>\n 777:\tc9                   \tleave  \n 778:\tc3                   \tret    \n\n0000000000000779 <test_encrypt_ctr>:\n 779:\tf3 0f 1e fa          \tendbr64 \n 77d:\t55                   \tpush   %rbp\n 77e:\t48 89 e5             \tmov    %rsp,%rbp\n 781:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 788 <test_encrypt_ctr+0xf>\n 788:\t48 89 c7             \tmov    %rax,%rdi\n 78b:\te8 1b 00 00 00       \tcall   7ab <test_xcrypt_ctr>\n 790:\t5d                   \tpop    %rbp\n 791:\tc3                   \tret    \n\n0000000000000792 <test_decrypt_ctr>:\n 792:\tf3 0f 1e fa          \tendbr64 \n 796:\t55                   \tpush   %rbp\n 797:\t48 89 e5             \tmov    %rsp,%rbp\n 79a:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 7a1 <test_decrypt_ctr+0xf>\n 7a1:\t48 89 c7             \tmov    %rax,%rdi\n 7a4:\te8 02 00 00 00       \tcall   7ab <test_xcrypt_ctr>\n 7a9:\t5d                   \tpop    %rbp\n 7aa:\tc3                   \tret    \n\n00000000000007ab <test_xcrypt_ctr>:\n 7ab:\tf3 0f 1e fa          \tendbr64 \n 7af:\t55                   \tpush   %rbp\n 7b0:\t48 89 e5             \tmov    %rsp,%rbp\n 7b3:\t48 81 ec 80 01 00 00 \tsub    $0x180,%rsp\n 7ba:\t48 89 bd 88 fe ff ff \tmov    %rdi,-0x178(%rbp)\n 7c1:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 7c8:\t00 00 \n 7ca:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 7ce:\t31 c0                \txor    %eax,%eax\n 7d0:\t48 b8 2b 7e 15 16 28 \tmovabs $0xa6d2ae2816157e2b,%rax\n 7d7:\tae d2 a6 \n 7da:\t48 ba ab f7 15 88 09 \tmovabs $0x3c4fcf098815f7ab,%rdx\n 7e1:\tcf 4f 3c \n 7e4:\t48 89 85 50 ff ff ff \tmov    %rax,-0xb0(%rbp)\n 7eb:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n 7f2:\t48 b8 87 4d 61 91 b6 \tmovabs $0x26e320b691614d87,%rax\n 7f9:\t20 e3 26 \n 7fc:\t48 ba 1b ef 68 64 99 \tmovabs $0xceb60d996468ef1b,%rdx\n 803:\t0d b6 ce \n 806:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n 80d:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n 814:\t48 b8 98 06 f6 6b 79 \tmovabs $0xfffd70796bf60698,%rax\n 81b:\t70 fd ff \n 81e:\t48 ba 86 17 18 7b b9 \tmovabs $0xfffdffb97b181786,%rdx\n 825:\tff fd ff \n 828:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n 82c:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n 830:\t48 b8 5a e4 df 3e db \tmovabs $0x5ed3d5db3edfe45a,%rax\n 837:\td5 d3 5e \n 83a:\t48 ba 5b 4f 09 02 0d \tmovabs $0xab3eb00d02094f5b,%rdx\n 841:\tb0 3e ab \n 844:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n 848:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n 84c:\t48 b8 1e 03 1d da 2f \tmovabs $0xd103be2fda1d031e,%rax\n 853:\tbe 03 d1 \n 856:\t48 ba 79 21 70 a0 f3 \tmovabs $0xee9c00f3a0702179,%rdx\n 85d:\t00 9c ee \n 860:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n 864:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n 868:\t48 b8 f0 f1 f2 f3 f4 \tmovabs $0xf7f6f5f4f3f2f1f0,%rax\n 86f:\tf5 f6 f7 \n 872:\t48 ba f8 f9 fa fb fc \tmovabs $0xfffefdfcfbfaf9f8,%rdx\n 879:\tfd fe ff \n 87c:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n 883:\t48 89 95 68 ff ff ff \tmov    %rdx,-0x98(%rbp)\n 88a:\t48 b8 6b c1 be e2 2e \tmovabs $0x969f402ee2bec16b,%rax\n 891:\t40 9f 96 \n 894:\t48 ba e9 3d 7e 11 73 \tmovabs $0x2a179373117e3de9,%rdx\n 89b:\t93 17 2a \n 89e:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 8a2:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n 8a6:\t48 b8 ae 2d 8a 57 1e \tmovabs $0x9cac031e578a2dae,%rax\n 8ad:\t03 ac 9c \n 8b0:\t48 ba 9e b7 6f ac 45 \tmovabs $0x518eaf45ac6fb79e,%rdx\n 8b7:\taf 8e 51 \n 8ba:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 8be:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n 8c2:\t48 b8 30 c8 1c 46 a3 \tmovabs $0x11e45ca3461cc830,%rax\n 8c9:\t5c e4 11 \n 8cc:\t48 ba e5 fb c1 19 1a \tmovabs $0xef520a1a19c1fbe5,%rdx\n 8d3:\t0a 52 ef \n 8d6:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 8da:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 8de:\t48 b8 f6 9f 24 45 df \tmovabs $0x179b4fdf45249ff6,%rax\n 8e5:\t4f 9b 17 \n 8e8:\t48 ba ad 2b 41 7b e6 \tmovabs $0x10376ce67b412bad,%rdx\n 8ef:\t6c 37 10 \n 8f2:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 8f6:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n 8fa:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n 901:\t48 8d 8d 50 ff ff ff \tlea    -0xb0(%rbp),%rcx\n 908:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n 90f:\t48 89 ce             \tmov    %rcx,%rsi\n 912:\t48 89 c7             \tmov    %rax,%rdi\n 915:\te8 00 00 00 00       \tcall   91a <test_xcrypt_ctr+0x16f>\n 91a:\t48 8d 8d 70 ff ff ff \tlea    -0x90(%rbp),%rcx\n 921:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n 928:\tba 40 00 00 00       \tmov    $0x40,%edx\n 92d:\t48 89 ce             \tmov    %rcx,%rsi\n 930:\t48 89 c7             \tmov    %rax,%rdi\n 933:\te8 00 00 00 00       \tcall   938 <test_xcrypt_ctr+0x18d>\n 938:\t48 8b 85 88 fe ff ff \tmov    -0x178(%rbp),%rax\n 93f:\t48 89 c6             \tmov    %rax,%rsi\n 942:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 949 <test_xcrypt_ctr+0x19e>\n 949:\t48 89 c7             \tmov    %rax,%rdi\n 94c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 951:\te8 00 00 00 00       \tcall   956 <test_xcrypt_ctr+0x1ab>\n 956:\t48 8d 8d 70 ff ff ff \tlea    -0x90(%rbp),%rcx\n 95d:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 961:\tba 40 00 00 00       \tmov    $0x40,%edx\n 966:\t48 89 ce             \tmov    %rcx,%rsi\n 969:\t48 89 c7             \tmov    %rax,%rdi\n 96c:\te8 00 00 00 00       \tcall   971 <test_xcrypt_ctr+0x1c6>\n 971:\t85 c0                \ttest   %eax,%eax\n 973:\t75 16                \tjne    98b <test_xcrypt_ctr+0x1e0>\n 975:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 97c <test_xcrypt_ctr+0x1d1>\n 97c:\t48 89 c7             \tmov    %rax,%rdi\n 97f:\te8 00 00 00 00       \tcall   984 <test_xcrypt_ctr+0x1d9>\n 984:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 989:\teb 14                \tjmp    99f <test_xcrypt_ctr+0x1f4>\n 98b:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 992 <test_xcrypt_ctr+0x1e7>\n 992:\t48 89 c7             \tmov    %rax,%rdi\n 995:\te8 00 00 00 00       \tcall   99a <test_xcrypt_ctr+0x1ef>\n 99a:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 99f:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 9a3:\t64 48 2b 14 25 28 00 \tsub    %fs:0x28,%rdx\n 9aa:\t00 00 \n 9ac:\t74 05                \tje     9b3 <test_xcrypt_ctr+0x208>\n 9ae:\te8 00 00 00 00       \tcall   9b3 <test_xcrypt_ctr+0x208>\n 9b3:\tc9                   \tleave  \n 9b4:\tc3                   \tret    \n\n00000000000009b5 <test_decrypt_ecb>:\n 9b5:\tf3 0f 1e fa          \tendbr64 \n 9b9:\t55                   \tpush   %rbp\n 9ba:\t48 89 e5             \tmov    %rsp,%rbp\n 9bd:\t48 81 ec 00 01 00 00 \tsub    $0x100,%rsp\n 9c4:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 9cb:\t00 00 \n 9cd:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 9d1:\t31 c0                \txor    %eax,%eax\n 9d3:\t48 b8 2b 7e 15 16 28 \tmovabs $0xa6d2ae2816157e2b,%rax\n 9da:\tae d2 a6 \n 9dd:\t48 ba ab f7 15 88 09 \tmovabs $0x3c4fcf098815f7ab,%rdx\n 9e4:\tcf 4f 3c \n 9e7:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 9eb:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n 9ef:\t48 b8 3a d7 7b b4 0d \tmovabs $0x60367a0db47bd73a,%rax\n 9f6:\t7a 36 60 \n 9f9:\t48 ba a8 9e ca f3 24 \tmovabs $0x97ef6624f3ca9ea8,%rdx\n a00:\t66 ef 97 \n a03:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n a07:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n a0b:\t48 b8 6b c1 be e2 2e \tmovabs $0x969f402ee2bec16b,%rax\n a12:\t40 9f 96 \n a15:\t48 ba e9 3d 7e 11 73 \tmovabs $0x2a179373117e3de9,%rdx\n a1c:\t93 17 2a \n a1f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n a23:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n a27:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n a2b:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n a32:\t48 89 d6             \tmov    %rdx,%rsi\n a35:\t48 89 c7             \tmov    %rax,%rdi\n a38:\te8 00 00 00 00       \tcall   a3d <test_decrypt_ecb+0x88>\n a3d:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n a41:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n a48:\t48 89 d6             \tmov    %rdx,%rsi\n a4b:\t48 89 c7             \tmov    %rax,%rdi\n a4e:\te8 00 00 00 00       \tcall   a53 <test_decrypt_ecb+0x9e>\n a53:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # a5a <test_decrypt_ecb+0xa5>\n a5a:\t48 89 c7             \tmov    %rax,%rdi\n a5d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n a62:\te8 00 00 00 00       \tcall   a67 <test_decrypt_ecb+0xb2>\n a67:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n a6b:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n a6f:\tba 10 00 00 00       \tmov    $0x10,%edx\n a74:\t48 89 ce             \tmov    %rcx,%rsi\n a77:\t48 89 c7             \tmov    %rax,%rdi\n a7a:\te8 00 00 00 00       \tcall   a7f <test_decrypt_ecb+0xca>\n a7f:\t85 c0                \ttest   %eax,%eax\n a81:\t75 16                \tjne    a99 <test_decrypt_ecb+0xe4>\n a83:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # a8a <test_decrypt_ecb+0xd5>\n a8a:\t48 89 c7             \tmov    %rax,%rdi\n a8d:\te8 00 00 00 00       \tcall   a92 <test_decrypt_ecb+0xdd>\n a92:\tb8 00 00 00 00       \tmov    $0x0,%eax\n a97:\teb 14                \tjmp    aad <test_decrypt_ecb+0xf8>\n a99:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # aa0 <test_decrypt_ecb+0xeb>\n aa0:\t48 89 c7             \tmov    %rax,%rdi\n aa3:\te8 00 00 00 00       \tcall   aa8 <test_decrypt_ecb+0xf3>\n aa8:\tb8 01 00 00 00       \tmov    $0x1,%eax\n aad:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n ab1:\t64 48 2b 14 25 28 00 \tsub    %fs:0x28,%rdx\n ab8:\t00 00 \n aba:\t74 05                \tje     ac1 <test_decrypt_ecb+0x10c>\n abc:\te8 00 00 00 00       \tcall   ac1 <test_decrypt_ecb+0x10c>\n ac1:\tc9                   \tleave  \n ac2:\tc3                   \tret    \n"
  },
  {
    "code": "/* Example: parse a simple configuration file */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include \"../ini.h\"\n\ntypedef struct\n{\n    int version;\n    const char* name;\n    const char* email;\n} configuration;\n\nstatic int handler(void* user, const char* section, const char* name,\n                   const char* value)\n{\n    configuration* pconfig = (configuration*)user;\n\n    #define MATCH(s, n) strcmp(section, s) == 0 && strcmp(name, n) == 0\n    if (MATCH(\"protocol\", \"version\")) {\n        pconfig->version = atoi(value);\n    } else if (MATCH(\"user\", \"name\")) {\n        pconfig->name = strdup(value);\n    } else if (MATCH(\"user\", \"email\")) {\n        pconfig->email = strdup(value);\n    } else {\n        return 0;  /* unknown section/name, error */\n    }\n    return 1;\n}\n\nint main(int argc, char* argv[])\n{\n    configuration config;\n    config.version = 0;  /* set defaults */\n    config.name = NULL;\n    config.email = NULL;\n\n    if (ini_parse(\"test.ini\", handler, &config) < 0) {\n        printf(\"Can't load 'test.ini'\\n\");\n        return 1;\n    }\n    printf(\"Config loaded from 'test.ini': version=%d, name=%s, email=%s\\n\",\n        config.version, config.name, config.email);\n\n    if (config.name)\n        free((void*)config.name);\n    if (config.email)\n        free((void*)config.email);\n\n    return 0;\n}\n",
    "assembly": "\nrepos/ini_example.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 <handler>:\n   0:\tf3 0f 1e fa          \tendbr64 \n   4:\t55                   \tpush   %rbp\n   5:\t48 89 e5             \tmov    %rsp,%rbp\n   8:\t48 83 ec 30          \tsub    $0x30,%rsp\n   c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  10:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  14:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n  18:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n  1c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  20:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  24:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  28:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 2f <handler+0x2f>\n  2f:\t48 89 d6             \tmov    %rdx,%rsi\n  32:\t48 89 c7             \tmov    %rax,%rdi\n  35:\te8 00 00 00 00       \tcall   3a <handler+0x3a>\n  3a:\t85 c0                \ttest   %eax,%eax\n  3c:\t75 31                \tjne    6f <handler+0x6f>\n  3e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  42:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 49 <handler+0x49>\n  49:\t48 89 d6             \tmov    %rdx,%rsi\n  4c:\t48 89 c7             \tmov    %rax,%rdi\n  4f:\te8 00 00 00 00       \tcall   54 <handler+0x54>\n  54:\t85 c0                \ttest   %eax,%eax\n  56:\t75 17                \tjne    6f <handler+0x6f>\n  58:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  5c:\t48 89 c7             \tmov    %rax,%rdi\n  5f:\te8 00 00 00 00       \tcall   64 <handler+0x64>\n  64:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  68:\t89 02                \tmov    %eax,(%rdx)\n  6a:\te9 a1 00 00 00       \tjmp    110 <handler+0x110>\n  6f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  73:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 7a <handler+0x7a>\n  7a:\t48 89 d6             \tmov    %rdx,%rsi\n  7d:\t48 89 c7             \tmov    %rax,%rdi\n  80:\te8 00 00 00 00       \tcall   85 <handler+0x85>\n  85:\t85 c0                \ttest   %eax,%eax\n  87:\t75 33                \tjne    bc <handler+0xbc>\n  89:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  8d:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 94 <handler+0x94>\n  94:\t48 89 d6             \tmov    %rdx,%rsi\n  97:\t48 89 c7             \tmov    %rax,%rdi\n  9a:\te8 00 00 00 00       \tcall   9f <handler+0x9f>\n  9f:\t85 c0                \ttest   %eax,%eax\n  a1:\t75 19                \tjne    bc <handler+0xbc>\n  a3:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  a7:\t48 89 c7             \tmov    %rax,%rdi\n  aa:\te8 00 00 00 00       \tcall   af <handler+0xaf>\n  af:\t48 89 c2             \tmov    %rax,%rdx\n  b2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  b6:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n  ba:\teb 54                \tjmp    110 <handler+0x110>\n  bc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  c0:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # c7 <handler+0xc7>\n  c7:\t48 89 d6             \tmov    %rdx,%rsi\n  ca:\t48 89 c7             \tmov    %rax,%rdi\n  cd:\te8 00 00 00 00       \tcall   d2 <handler+0xd2>\n  d2:\t85 c0                \ttest   %eax,%eax\n  d4:\t75 33                \tjne    109 <handler+0x109>\n  d6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  da:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # e1 <handler+0xe1>\n  e1:\t48 89 d6             \tmov    %rdx,%rsi\n  e4:\t48 89 c7             \tmov    %rax,%rdi\n  e7:\te8 00 00 00 00       \tcall   ec <handler+0xec>\n  ec:\t85 c0                \ttest   %eax,%eax\n  ee:\t75 19                \tjne    109 <handler+0x109>\n  f0:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  f4:\t48 89 c7             \tmov    %rax,%rdi\n  f7:\te8 00 00 00 00       \tcall   fc <handler+0xfc>\n  fc:\t48 89 c2             \tmov    %rax,%rdx\n  ff:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 103:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n 107:\teb 07                \tjmp    110 <handler+0x110>\n 109:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 10e:\teb 05                \tjmp    115 <handler+0x115>\n 110:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 115:\tc9                   \tleave  \n 116:\tc3                   \tret    \n\n0000000000000117 <main>:\n 117:\tf3 0f 1e fa          \tendbr64 \n 11b:\t55                   \tpush   %rbp\n 11c:\t48 89 e5             \tmov    %rsp,%rbp\n 11f:\t48 83 ec 30          \tsub    $0x30,%rsp\n 123:\t89 7d dc             \tmov    %edi,-0x24(%rbp)\n 126:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n 12a:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 131:\t00 00 \n 133:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 137:\t31 c0                \txor    %eax,%eax\n 139:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n 140:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n 147:\t00 \n 148:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n 14f:\t00 \n 150:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 154:\t48 89 c2             \tmov    %rax,%rdx\n 157:\t48 8d 05 a2 fe ff ff \tlea    -0x15e(%rip),%rax        # 0 <handler>\n 15e:\t48 89 c6             \tmov    %rax,%rsi\n 161:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 168 <main+0x51>\n 168:\t48 89 c7             \tmov    %rax,%rdi\n 16b:\te8 00 00 00 00       \tcall   170 <main+0x59>\n 170:\t85 c0                \ttest   %eax,%eax\n 172:\t79 16                \tjns    18a <main+0x73>\n 174:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 17b <main+0x64>\n 17b:\t48 89 c7             \tmov    %rax,%rdi\n 17e:\te8 00 00 00 00       \tcall   183 <main+0x6c>\n 183:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 188:\teb 50                \tjmp    1da <main+0xc3>\n 18a:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n 18e:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 192:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n 195:\t89 c6                \tmov    %eax,%esi\n 197:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 19e <main+0x87>\n 19e:\t48 89 c7             \tmov    %rax,%rdi\n 1a1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 1a6:\te8 00 00 00 00       \tcall   1ab <main+0x94>\n 1ab:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 1af:\t48 85 c0             \ttest   %rax,%rax\n 1b2:\t74 0c                \tje     1c0 <main+0xa9>\n 1b4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 1b8:\t48 89 c7             \tmov    %rax,%rdi\n 1bb:\te8 00 00 00 00       \tcall   1c0 <main+0xa9>\n 1c0:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 1c4:\t48 85 c0             \ttest   %rax,%rax\n 1c7:\t74 0c                \tje     1d5 <main+0xbe>\n 1c9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 1cd:\t48 89 c7             \tmov    %rax,%rdi\n 1d0:\te8 00 00 00 00       \tcall   1d5 <main+0xbe>\n 1d5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 1da:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 1de:\t64 48 2b 14 25 28 00 \tsub    %fs:0x28,%rdx\n 1e5:\t00 00 \n 1e7:\t74 05                \tje     1ee <main+0xd7>\n 1e9:\te8 00 00 00 00       \tcall   1ee <main+0xd7>\n 1ee:\tc9                   \tleave  \n 1ef:\tc3                   \tret    \n"
  },
  {
    "code": "/* Parse a configuration file into a struct using X-Macros */\n\n#include <stdio.h>\n#include <string.h>\n#include \"../ini.h\"\n\n/* define the config struct type */\ntypedef struct {\n    #define CFG(s, n, default) char *s##_##n;\n    #include \"config.def\"\n} config;\n\n/* create one and fill in its default values */\nconfig Config = {\n    #define CFG(s, n, default) default,\n    #include \"config.def\"\n};\n\n/* process a line of the INI file, storing valid values into config struct */\nint handler(void *user, const char *section, const char *name,\n            const char *value)\n{\n    config *cfg = (config *)user;\n\n    if (0) ;\n    #define CFG(s, n, default) else if (strcmp(section, #s)==0 && \\\n        strcmp(name, #n)==0) cfg->s##_##n = strdup(value);\n    #include \"config.def\"\n\n    return 1;\n}\n\n/* print all the variables in the config, one per line */\nvoid dump_config(config *cfg)\n{\n    #define CFG(s, n, default) printf(\"%s_%s = %s\\n\", #s, #n, cfg->s##_##n);\n    #include \"config.def\"\n}\n\nint main(int argc, char* argv[])\n{\n    if (ini_parse(\"test.ini\", handler, &Config) < 0)\n        printf(\"Can't load 'test.ini', using defaults\\n\");\n    dump_config(&Config);\n    return 0;\n}\n",
    "assembly": "\nrepos/ini_xmacros.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 <handler>:\n   0:\tf3 0f 1e fa          \tendbr64 \n   4:\t55                   \tpush   %rbp\n   5:\t48 89 e5             \tmov    %rsp,%rbp\n   8:\t48 83 ec 30          \tsub    $0x30,%rsp\n   c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  10:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  14:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n  18:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n  1c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  20:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  24:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  28:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 2f <handler+0x2f>\n  2f:\t48 89 d6             \tmov    %rdx,%rsi\n  32:\t48 89 c7             \tmov    %rax,%rdi\n  35:\te8 00 00 00 00       \tcall   3a <handler+0x3a>\n  3a:\t85 c0                \ttest   %eax,%eax\n  3c:\t75 35                \tjne    73 <handler+0x73>\n  3e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  42:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 49 <handler+0x49>\n  49:\t48 89 d6             \tmov    %rdx,%rsi\n  4c:\t48 89 c7             \tmov    %rax,%rdi\n  4f:\te8 00 00 00 00       \tcall   54 <handler+0x54>\n  54:\t85 c0                \ttest   %eax,%eax\n  56:\t75 1b                \tjne    73 <handler+0x73>\n  58:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  5c:\t48 89 c7             \tmov    %rax,%rdi\n  5f:\te8 00 00 00 00       \tcall   64 <handler+0x64>\n  64:\t48 89 c2             \tmov    %rax,%rdx\n  67:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  6b:\t48 89 10             \tmov    %rdx,(%rax)\n  6e:\te9 98 00 00 00       \tjmp    10b <handler+0x10b>\n  73:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  77:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 7e <handler+0x7e>\n  7e:\t48 89 d6             \tmov    %rdx,%rsi\n  81:\t48 89 c7             \tmov    %rax,%rdi\n  84:\te8 00 00 00 00       \tcall   89 <handler+0x89>\n  89:\t85 c0                \ttest   %eax,%eax\n  8b:\t75 33                \tjne    c0 <handler+0xc0>\n  8d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  91:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 98 <handler+0x98>\n  98:\t48 89 d6             \tmov    %rdx,%rsi\n  9b:\t48 89 c7             \tmov    %rax,%rdi\n  9e:\te8 00 00 00 00       \tcall   a3 <handler+0xa3>\n  a3:\t85 c0                \ttest   %eax,%eax\n  a5:\t75 19                \tjne    c0 <handler+0xc0>\n  a7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  ab:\t48 89 c7             \tmov    %rax,%rdi\n  ae:\te8 00 00 00 00       \tcall   b3 <handler+0xb3>\n  b3:\t48 89 c2             \tmov    %rax,%rdx\n  b6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  ba:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n  be:\teb 4b                \tjmp    10b <handler+0x10b>\n  c0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  c4:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # cb <handler+0xcb>\n  cb:\t48 89 d6             \tmov    %rdx,%rsi\n  ce:\t48 89 c7             \tmov    %rax,%rdi\n  d1:\te8 00 00 00 00       \tcall   d6 <handler+0xd6>\n  d6:\t85 c0                \ttest   %eax,%eax\n  d8:\t75 31                \tjne    10b <handler+0x10b>\n  da:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  de:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # e5 <handler+0xe5>\n  e5:\t48 89 d6             \tmov    %rdx,%rsi\n  e8:\t48 89 c7             \tmov    %rax,%rdi\n  eb:\te8 00 00 00 00       \tcall   f0 <handler+0xf0>\n  f0:\t85 c0                \ttest   %eax,%eax\n  f2:\t75 17                \tjne    10b <handler+0x10b>\n  f4:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  f8:\t48 89 c7             \tmov    %rax,%rdi\n  fb:\te8 00 00 00 00       \tcall   100 <handler+0x100>\n 100:\t48 89 c2             \tmov    %rax,%rdx\n 103:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 107:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n 10b:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 110:\tc9                   \tleave  \n 111:\tc3                   \tret    \n\n0000000000000112 <dump_config>:\n 112:\tf3 0f 1e fa          \tendbr64 \n 116:\t55                   \tpush   %rbp\n 117:\t48 89 e5             \tmov    %rsp,%rbp\n 11a:\t48 83 ec 10          \tsub    $0x10,%rsp\n 11e:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 122:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 126:\t48 8b 00             \tmov    (%rax),%rax\n 129:\t48 89 c1             \tmov    %rax,%rcx\n 12c:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 133 <dump_config+0x21>\n 133:\t48 89 c2             \tmov    %rax,%rdx\n 136:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 13d <dump_config+0x2b>\n 13d:\t48 89 c6             \tmov    %rax,%rsi\n 140:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 147 <dump_config+0x35>\n 147:\t48 89 c7             \tmov    %rax,%rdi\n 14a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 14f:\te8 00 00 00 00       \tcall   154 <dump_config+0x42>\n 154:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 158:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 15c:\t48 89 c1             \tmov    %rax,%rcx\n 15f:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 166 <dump_config+0x54>\n 166:\t48 89 c2             \tmov    %rax,%rdx\n 169:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 170 <dump_config+0x5e>\n 170:\t48 89 c6             \tmov    %rax,%rsi\n 173:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 17a <dump_config+0x68>\n 17a:\t48 89 c7             \tmov    %rax,%rdi\n 17d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 182:\te8 00 00 00 00       \tcall   187 <dump_config+0x75>\n 187:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 18b:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 18f:\t48 89 c1             \tmov    %rax,%rcx\n 192:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 199 <dump_config+0x87>\n 199:\t48 89 c2             \tmov    %rax,%rdx\n 19c:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1a3 <dump_config+0x91>\n 1a3:\t48 89 c6             \tmov    %rax,%rsi\n 1a6:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1ad <dump_config+0x9b>\n 1ad:\t48 89 c7             \tmov    %rax,%rdi\n 1b0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 1b5:\te8 00 00 00 00       \tcall   1ba <dump_config+0xa8>\n 1ba:\t90                   \tnop\n 1bb:\tc9                   \tleave  \n 1bc:\tc3                   \tret    \n\n00000000000001bd <main>:\n 1bd:\tf3 0f 1e fa          \tendbr64 \n 1c1:\t55                   \tpush   %rbp\n 1c2:\t48 89 e5             \tmov    %rsp,%rbp\n 1c5:\t48 83 ec 10          \tsub    $0x10,%rsp\n 1c9:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n 1cc:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n 1d0:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1d7 <main+0x1a>\n 1d7:\t48 89 c2             \tmov    %rax,%rdx\n 1da:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1e1 <main+0x24>\n 1e1:\t48 89 c6             \tmov    %rax,%rsi\n 1e4:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1eb <main+0x2e>\n 1eb:\t48 89 c7             \tmov    %rax,%rdi\n 1ee:\te8 00 00 00 00       \tcall   1f3 <main+0x36>\n 1f3:\t85 c0                \ttest   %eax,%eax\n 1f5:\t79 0f                \tjns    206 <main+0x49>\n 1f7:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1fe <main+0x41>\n 1fe:\t48 89 c7             \tmov    %rax,%rdi\n 201:\te8 00 00 00 00       \tcall   206 <main+0x49>\n 206:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 20d <main+0x50>\n 20d:\t48 89 c7             \tmov    %rax,%rdi\n 210:\te8 00 00 00 00       \tcall   215 <main+0x58>\n 215:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 21a:\tc9                   \tleave  \n 21b:\tc3                   \tret    \n"
  }
]